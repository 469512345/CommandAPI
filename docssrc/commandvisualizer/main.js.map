{"version":3,"file":"main.js","mappings":"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","sources":["webpack://commandvisualizer/./node_modules/node-brigadier/dist/index.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/CommandDispatcher.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/LiteralMessage.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/ParseResults.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/StringReader.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/arguments/ArgumentType.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/arguments/BoolArgumentType.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/arguments/FloatArgumentType.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/arguments/IntegerArgumentType.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/arguments/StringArgumentType.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/builder/ArgumentBuilder.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/builder/LiteralArgumentBuilder.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/builder/RequiredArgumentBuilder.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/context/CommandContext.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/context/CommandContextBuilder.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/context/ParsedArgument.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/context/ParsedCommandNode.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/context/StringRange.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/context/SuggestionContext.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/exceptions/BuiltInExceptions.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/exceptions/CommandSyntaxException.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/exceptions/DynamicCommandExceptionType.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/exceptions/SimpleCommandExceptionType.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/suggestion/IntegerSuggestion.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/suggestion/Suggestion.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/suggestion/Suggestions.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/suggestion/SuggestionsBuilder.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/tree/ArgumentCommandNode.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/tree/CommandNode.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/tree/LiteralCommandNode.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/tree/RootCommandNode.js","webpack://commandvisualizer/./node_modules/node-brigadier/dist/lib/util/isEqual.js","webpack://commandvisualizer/webpack/bootstrap","webpack://commandvisualizer/./arguments.js","webpack://commandvisualizer/./commandvisualizer.js"],"sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst CommandDispatcher_1 = __importDefault(require(\"./lib/CommandDispatcher\"));\r\nconst LiteralMessage_1 = __importDefault(require(\"./lib/LiteralMessage\"));\r\nconst ParseResults_1 = __importDefault(require(\"./lib/ParseResults\"));\r\nconst StringReader_1 = __importDefault(require(\"./lib/StringReader\"));\r\nconst ArgumentType_1 = require(\"./lib/arguments/ArgumentType\");\r\nconst LiteralArgumentBuilder_1 = __importStar(require(\"./lib/builder/LiteralArgumentBuilder\"));\r\nconst RequiredArgumentBuilder_1 = __importStar(require(\"./lib/builder/RequiredArgumentBuilder\"));\r\nconst CommandContext_1 = __importDefault(require(\"./lib/context/CommandContext\"));\r\nconst CommandContextBuilder_1 = __importDefault(require(\"./lib/context/CommandContextBuilder\"));\r\nconst ParsedArgument_1 = __importDefault(require(\"./lib/context/ParsedArgument\"));\r\nconst ParsedCommandNode_1 = __importDefault(require(\"./lib/context/ParsedCommandNode\"));\r\nconst StringRange_1 = __importDefault(require(\"./lib/context/StringRange\"));\r\nconst SuggestionContext_1 = __importDefault(require(\"./lib/context/SuggestionContext\"));\r\nconst CommandSyntaxException_1 = __importDefault(require(\"./lib/exceptions/CommandSyntaxException\"));\r\nconst DynamicCommandExceptionType_1 = __importDefault(require(\"./lib/exceptions/DynamicCommandExceptionType\"));\r\nconst SimpleCommandExceptionType_1 = __importDefault(require(\"./lib/exceptions/SimpleCommandExceptionType\"));\r\nconst Suggestion_1 = __importDefault(require(\"./lib/suggestion/Suggestion\"));\r\nconst Suggestions_1 = __importDefault(require(\"./lib/suggestion/Suggestions\"));\r\nconst SuggestionsBuilder_1 = __importDefault(require(\"./lib/suggestion/SuggestionsBuilder\"));\r\nconst ArgumentCommandNode_1 = __importDefault(require(\"./lib/tree/ArgumentCommandNode\"));\r\nconst LiteralCommandNode_1 = __importDefault(require(\"./lib/tree/LiteralCommandNode\"));\r\nconst RootCommandNode_1 = __importDefault(require(\"./lib/tree/RootCommandNode\"));\r\nconst { word, string, greedyString, bool, integer, float } = ArgumentType_1.DefaultType;\r\nmodule.exports = {\r\n    dispatcher: new CommandDispatcher_1.default(),\r\n    word, string, greedyString, bool, integer, float,\r\n    literal: LiteralArgumentBuilder_1.literal, argument: RequiredArgumentBuilder_1.argument,\r\n    CommandDispatcher: CommandDispatcher_1.default,\r\n    LiteralMessage: LiteralMessage_1.default,\r\n    ParseResults: ParseResults_1.default,\r\n    StringReader: StringReader_1.default,\r\n    LiteralArgumentBuilder: LiteralArgumentBuilder_1.default,\r\n    RequiredArgumentBuilder: RequiredArgumentBuilder_1.default,\r\n    CommandContext: CommandContext_1.default,\r\n    CommandContextBuilder: CommandContextBuilder_1.default,\r\n    ParsedArgument: ParsedArgument_1.default,\r\n    ParsedCommandNode: ParsedCommandNode_1.default,\r\n    StringRange: StringRange_1.default,\r\n    SuggestionsContext: SuggestionContext_1.default,\r\n    CommandSyntaxException: CommandSyntaxException_1.default,\r\n    SimpleCommandExceptionType: SimpleCommandExceptionType_1.default,\r\n    DynamicCommandExceptionType: DynamicCommandExceptionType_1.default,\r\n    Suggestion: Suggestion_1.default,\r\n    Suggestions: Suggestions_1.default,\r\n    SuggestionsBuilder: SuggestionsBuilder_1.default,\r\n    ArgumentCommandNode: ArgumentCommandNode_1.default,\r\n    LiteralCommandNode: LiteralCommandNode_1.default,\r\n    RootCommandNode: RootCommandNode_1.default\r\n};\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ParseResults_1 = __importDefault(require(\"./ParseResults\"));\r\nconst CommandContextBuilder_1 = __importDefault(require(\"./context/CommandContextBuilder\"));\r\nconst CommandSyntaxException_1 = __importDefault(require(\"./exceptions/CommandSyntaxException\"));\r\nconst Suggestions_1 = __importDefault(require(\"./suggestion/Suggestions\"));\r\nconst SuggestionsBuilder_1 = __importDefault(require(\"./suggestion/SuggestionsBuilder\"));\r\nconst RootCommandNode_1 = __importDefault(require(\"./tree/RootCommandNode\"));\r\nconst StringReader_1 = __importDefault(require(\"./StringReader\"));\r\nconst ARGUMENT_SEPARATOR = \" \";\r\nconst USAGE_OPTIONAL_OPEN = \"[\";\r\nconst USAGE_OPTIONAL_CLOSE = \"]\";\r\nconst USAGE_REQUIRED_OPEN = \"(\";\r\nconst USAGE_REQUIRED_CLOSE = \")\";\r\nconst USAGE_OR = \"|\";\r\nclass CommandDispatcher {\r\n    constructor(root = null) {\r\n        this.consumer = {\r\n            onCommandComplete() { }\r\n        };\r\n        this.root = root || new RootCommandNode_1.default();\r\n    }\r\n    register(command) {\r\n        let build = command.build();\r\n        this.root.addChild(build);\r\n        return build;\r\n    }\r\n    setConsumer(consumer) {\r\n        this.consumer = consumer;\r\n    }\r\n    execute(input, source = null) {\r\n        if (typeof input === \"string\")\r\n            input = new StringReader_1.default(input);\r\n        let parse;\r\n        if (input instanceof StringReader_1.default) {\r\n            if (!(source == null))\r\n                parse = this.parse(input, source);\r\n        }\r\n        else\r\n            parse = input;\r\n        if (parse.getReader().canRead()) {\r\n            if (parse.getExceptions().size === 1) {\r\n                throw parse.getExceptions().values().next().value;\r\n            }\r\n            else if (parse.getContext().getRange().isEmpty()) {\r\n                throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.dispatcherUnknownCommand().createWithContext(parse.getReader());\r\n            }\r\n            else {\r\n                throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.dispatcherUnknownArgument().createWithContext(parse.getReader());\r\n            }\r\n        }\r\n        let result = 0;\r\n        let successfulForks = 0;\r\n        let forked = false;\r\n        let foundCommand = false;\r\n        let command = parse.getReader().getString();\r\n        let original = parse.getContext().build(command);\r\n        let contexts = [];\r\n        contexts.push(original);\r\n        let next = null;\r\n        while (!(contexts == null)) {\r\n            for (let i = 0; i < contexts.length; i++) {\r\n                let context = contexts[i];\r\n                let child = context.getChild();\r\n                if (!(child == null)) {\r\n                    forked = forked || context.isForked();\r\n                    if (child.hasNodes()) {\r\n                        foundCommand = true;\r\n                        let modifier = context.getRedirectModifier();\r\n                        if (modifier == null) {\r\n                            if (next == null)\r\n                                next = [];\r\n                            next.push(child.copyFor(context.getSource()));\r\n                        }\r\n                        else {\r\n                            try {\r\n                                let results = modifier.apply(context);\r\n                                if (results.length !== 0) {\r\n                                    if (next == null)\r\n                                        next = [];\r\n                                    for (let source of results) {\r\n                                        next.push(child.copyFor(source));\r\n                                    }\r\n                                }\r\n                            }\r\n                            catch (ex) {\r\n                                this.consumer.onCommandComplete(context, false, 0);\r\n                                if (!forked)\r\n                                    throw ex;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (context.getCommand() != null) {\r\n                    foundCommand = true;\r\n                    try {\r\n                        let value = context.getCommand()(context);\r\n                        result += value;\r\n                        this.consumer.onCommandComplete(context, true, value);\r\n                        successfulForks++;\r\n                    }\r\n                    catch (ex) {\r\n                        this.consumer.onCommandComplete(context, false, 0);\r\n                        if (!forked)\r\n                            throw ex;\r\n                    }\r\n                }\r\n            }\r\n            contexts = next;\r\n            next = null;\r\n        }\r\n        if (!foundCommand) {\r\n            this.consumer.onCommandComplete(original, false, 0);\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.dispatcherUnknownCommand().createWithContext(parse.getReader());\r\n        }\r\n        return forked ? successfulForks : result;\r\n    }\r\n    parse(command, source) {\r\n        if (typeof command === \"string\")\r\n            command = new StringReader_1.default(command);\r\n        let context = new CommandContextBuilder_1.default(this, source, this.root, command.getCursor());\r\n        return this.parseNodes(this.root, command, context);\r\n    }\r\n    parseNodes(node, originalReader, contextSoFar) {\r\n        let source = contextSoFar.getSource();\r\n        let errors = null;\r\n        let potentials = null;\r\n        let cursor = originalReader.getCursor();\r\n        for (let child of node.getRelevantNodes(originalReader)) {\r\n            if (!child.canUse(source))\r\n                continue;\r\n            let context = contextSoFar.copy();\r\n            let reader = new StringReader_1.default(originalReader);\r\n            try {\r\n                child.parse(reader, context);\r\n                if (reader.canRead())\r\n                    if (reader.peek() != ARGUMENT_SEPARATOR)\r\n                        throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.dispatcherExpectedArgumentSeparator().createWithContext(reader);\r\n            }\r\n            catch (ex) {\r\n                if (errors == null) {\r\n                    errors = new Map();\r\n                }\r\n                errors.set(child, ex);\r\n                reader.setCursor(cursor);\r\n                continue;\r\n            }\r\n            context.withCommand(child.getCommand());\r\n            if (reader.canRead(child.getRedirect() == null ? 2 : 1)) {\r\n                reader.skip();\r\n                if (!(child.getRedirect() == null)) {\r\n                    let childContext = new CommandContextBuilder_1.default(this, source, child.getRedirect(), reader.getCursor());\r\n                    let parse = this.parseNodes(child.getRedirect(), reader, childContext);\r\n                    context.withChild(parse.getContext());\r\n                    return new ParseResults_1.default(context, parse.getReader(), parse.getExceptions());\r\n                }\r\n                else {\r\n                    let parse = this.parseNodes(child, reader, context);\r\n                    if (potentials == null) {\r\n                        potentials = [];\r\n                    }\r\n                    potentials.push(parse);\r\n                }\r\n            }\r\n            else {\r\n                if (potentials == null) {\r\n                    potentials = [];\r\n                }\r\n                potentials.push(new ParseResults_1.default(context, reader, new Map()));\r\n            }\r\n        }\r\n        if (!(potentials == null)) {\r\n            if (potentials.length > 1) {\r\n                potentials.sort((a, b) => {\r\n                    if (!a.getReader().canRead() && b.getReader().canRead()) {\r\n                        return -1;\r\n                    }\r\n                    if (a.getReader().canRead() && !b.getReader().canRead()) {\r\n                        return 1;\r\n                    }\r\n                    if (a.getExceptions().size === 0 && b.getExceptions().size !== 0) {\r\n                        return -1;\r\n                    }\r\n                    if (a.getExceptions().size !== 0 && b.getExceptions().size === 0) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            return potentials[0];\r\n        }\r\n        return new ParseResults_1.default(contextSoFar, originalReader, errors == null ? new Map() : errors);\r\n    }\r\n    getAllUsage(node, source, restricted) {\r\n        const result = [];\r\n        this.__getAllUsage(node, source, result, \"\", restricted);\r\n        return result;\r\n    }\r\n    __getAllUsage(node, source, result, prefix = \"\", restricted) {\r\n        if (restricted && !node.canUse(source)) {\r\n            return;\r\n        }\r\n        if (node.getCommand() != null) {\r\n            result.push(prefix);\r\n        }\r\n        if (node.getRedirect() != null) {\r\n            const redirect = node.getRedirect() === this.root ? \"...\" : \"-> \" + node.getRedirect().getUsageText();\r\n            result.push(prefix.length === 0 ? node.getUsageText() + ARGUMENT_SEPARATOR + redirect : prefix + ARGUMENT_SEPARATOR + redirect);\r\n        }\r\n        else if (node.getChildrenCount() > 0) {\r\n            for (let child of node.getChildren()) {\r\n                this.__getAllUsage(child, source, result, prefix.length === 0 ? child.getUsageText() : prefix + ARGUMENT_SEPARATOR + child.getUsageText(), restricted);\r\n            }\r\n        }\r\n    }\r\n    getSmartUsage(node, source) {\r\n        let result = new Map();\r\n        let optional = node.getCommand() !== null;\r\n        for (let child of node.getChildren()) {\r\n            let usage = this.__getSmartUsage(child, source, optional, false);\r\n            if (!(usage == null)) {\r\n                result.set(child, usage);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    __getSmartUsage(node, source, optional, deep) {\r\n        if (!node.canUse(source)) {\r\n            return null;\r\n        }\r\n        let self = optional ? USAGE_OPTIONAL_OPEN + node.getUsageText() + USAGE_OPTIONAL_CLOSE : node.getUsageText();\r\n        let childOptional = node.getCommand() != null;\r\n        let open = childOptional ? USAGE_OPTIONAL_OPEN : USAGE_REQUIRED_OPEN;\r\n        let close = childOptional ? USAGE_OPTIONAL_CLOSE : USAGE_REQUIRED_CLOSE;\r\n        if (!deep) {\r\n            if ((node.getRedirect() != null)) {\r\n                let redirect = node.getRedirect() == this.root ? \"...\" : \"-> \" + node.getRedirect().getUsageText();\r\n                return self + ARGUMENT_SEPARATOR + redirect;\r\n            }\r\n            else {\r\n                let children = [...node.getChildren()].filter(c => c.canUse(source));\r\n                if ((children.length == 1)) {\r\n                    let usage = this.__getSmartUsage(children[0], source, childOptional, childOptional);\r\n                    if (!(usage == null)) {\r\n                        return self + ARGUMENT_SEPARATOR + usage;\r\n                    }\r\n                }\r\n                else if (children.length > 1) {\r\n                    let childUsage = new Set();\r\n                    for (let child of children) {\r\n                        let usage = this.__getSmartUsage(child, source, childOptional, true);\r\n                        if (!(usage == null)) {\r\n                            childUsage.add(usage);\r\n                        }\r\n                    }\r\n                    if (childUsage.size === 1) {\r\n                        let usage = childUsage.values().next().value;\r\n                        return self + ARGUMENT_SEPARATOR + (childOptional ? USAGE_OPTIONAL_OPEN + usage + USAGE_OPTIONAL_CLOSE : usage);\r\n                    }\r\n                    else if (childUsage.size > 1) {\r\n                        let builder = open;\r\n                        let count = 0;\r\n                        for (let child of children) {\r\n                            if (count > 0) {\r\n                                builder += USAGE_OR;\r\n                            }\r\n                            builder += child.getUsageText();\r\n                            count++;\r\n                        }\r\n                        if (count > 0) {\r\n                            builder += close;\r\n                            return self + ARGUMENT_SEPARATOR + builder;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return self;\r\n    }\r\n    getCompletionSuggestions(parse, cursor = parse.getReader().getTotalLength()) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let context = parse.getContext();\r\n            let nodeBeforeCursor = context.findSuggestionContext(cursor);\r\n            let parent = nodeBeforeCursor.parent;\r\n            let start = Math.min(nodeBeforeCursor.startPos, cursor);\r\n            let fullInput = parse.getReader().getString();\r\n            let truncatedInput = fullInput.substring(0, cursor);\r\n            let futures = [];\r\n            for (let node of parent.getChildren()) {\r\n                let future = yield Suggestions_1.default.empty();\r\n                try {\r\n                    future = yield node.listSuggestions(context.build(truncatedInput), new SuggestionsBuilder_1.default(truncatedInput, start));\r\n                }\r\n                catch (ignored) {\r\n                }\r\n                futures.push(future);\r\n            }\r\n            return Promise.resolve(Suggestions_1.default.merge(fullInput, futures));\r\n        });\r\n    }\r\n    getRoot() {\r\n        return this.root;\r\n    }\r\n    getPath(target) {\r\n        let nodes = [];\r\n        this.addPaths(this.root, nodes, []);\r\n        for (let list of nodes) {\r\n            if (list[list.length - 1] === target) {\r\n                let result = [];\r\n                for (let node of list) {\r\n                    if (node !== this.root) {\r\n                        result.push(node.getName());\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    findNode(path) {\r\n        let node = this.root;\r\n        for (let name of path) {\r\n            node = node.getChild(name);\r\n            if (node == null)\r\n                return null;\r\n        }\r\n        return node;\r\n    }\r\n    findAmbiguities(consumer) {\r\n        this.root.findAmbiguities(consumer);\r\n    }\r\n    addPaths(node, result, parents) {\r\n        let current = [];\r\n        current.push(...parents);\r\n        current.push(node);\r\n        result.push(current);\r\n        for (let child of node.getChildren())\r\n            this.addPaths(child, result, current);\r\n    }\r\n}\r\nexports.default = CommandDispatcher;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass LiteralMessage {\r\n    constructor(str) {\r\n        this.str = str;\r\n    }\r\n    getString() {\r\n        return this.str;\r\n    }\r\n    toString() {\r\n        return this.str;\r\n    }\r\n}\r\nexports.default = LiteralMessage;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst StringReader_1 = __importDefault(require(\"./StringReader\"));\r\nclass ParseResults {\r\n    constructor(context, reader, exceptions) {\r\n        this.context = context;\r\n        this.reader = reader || new StringReader_1.default(\"\");\r\n        this.exceptions = exceptions || new Map();\r\n    }\r\n    getContext() {\r\n        return this.context;\r\n    }\r\n    getReader() {\r\n        return this.reader;\r\n    }\r\n    getExceptions() {\r\n        return this.exceptions;\r\n    }\r\n}\r\nexports.default = ParseResults;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst CommandSyntaxException_1 = __importDefault(require(\"./exceptions/CommandSyntaxException\"));\r\nconst SYNTAX_ESCAPE = '\\\\';\r\nconst SYNTAX_QUOTE = '\\\"';\r\nclass StringReader {\r\n    constructor(other) {\r\n        this.cursor = 0;\r\n        if (typeof other === \"string\") {\r\n            this.string = other;\r\n        }\r\n        else {\r\n            this.string = other.string;\r\n            this.cursor = other.cursor;\r\n        }\r\n    }\r\n    getString() {\r\n        return this.string;\r\n    }\r\n    setCursor(cursor) {\r\n        this.cursor = cursor;\r\n    }\r\n    getRemainingLength() {\r\n        return (this.string.length - this.cursor);\r\n    }\r\n    getTotalLength() {\r\n        return this.string.length;\r\n    }\r\n    getCursor() {\r\n        return this.cursor;\r\n    }\r\n    getRead() {\r\n        return this.string.substring(0, this.cursor);\r\n    }\r\n    getRemaining() {\r\n        return this.string.substring(this.cursor);\r\n    }\r\n    canRead(length = 1) {\r\n        return this.cursor + length <= this.string.length;\r\n    }\r\n    peek(offset = 0) {\r\n        return this.string.charAt(this.cursor + offset);\r\n    }\r\n    read() {\r\n        return this.string.charAt(this.cursor++);\r\n    }\r\n    skip() {\r\n        this.cursor++;\r\n    }\r\n    static isAllowedNumber(c) {\r\n        return c >= '0' && c <= '9' || c == '.' || c == '-' || c == '+' || c == 'e' || c == 'E';\r\n    }\r\n    skipWhitespace() {\r\n        while ((this.canRead() && /\\s/.test(this.peek()))) {\r\n            this.skip();\r\n        }\r\n    }\r\n    readInt() {\r\n        let start = this.cursor;\r\n        while (this.canRead() && StringReader.isAllowedNumber(this.peek())) {\r\n            this.skip();\r\n        }\r\n        let number = this.string.substring(start, this.cursor);\r\n        if (number.length === 0) {\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.readerExpectedInt().createWithContext(this);\r\n        }\r\n        const result = parseInt(number);\r\n        if (isNaN(result) || result !== parseFloat(number)) {\r\n            this.cursor = start;\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.readerInvalidInt().createWithContext(this, number);\r\n        }\r\n        else\r\n            return result;\r\n    }\r\n    readFloat() {\r\n        let start = this.cursor;\r\n        while ((this.canRead() && StringReader.isAllowedNumber(this.peek()))) {\r\n            this.skip();\r\n        }\r\n        let number = this.string.substring(start, this.cursor);\r\n        if (number.length === 0) {\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.readerExpectedFloat().createWithContext(this);\r\n        }\r\n        const result = parseFloat(number);\r\n        const strictParseFloatTest = parseFloat(number.substring(result.toString().length, this.cursor));\r\n        if (isNaN(result) || (!isNaN(strictParseFloatTest) &&\r\n            strictParseFloatTest !== 0)) {\r\n            this.cursor = start;\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.readerInvalidFloat().createWithContext(this, number);\r\n        }\r\n        else\r\n            return result;\r\n    }\r\n    static isAllowedInUnquotedString(c) {\r\n        return c >= '0' && c <= '9'\r\n            || c >= 'A' && c <= 'Z'\r\n            || c >= 'a' && c <= 'z'\r\n            || c == '_' || c == '-'\r\n            || c == '.' || c == '+';\r\n    }\r\n    readUnquotedString() {\r\n        let start = this.cursor;\r\n        while (this.canRead() && StringReader.isAllowedInUnquotedString(this.peek())) {\r\n            this.skip();\r\n        }\r\n        return this.string.substring(start, this.cursor);\r\n    }\r\n    readQuotedString() {\r\n        if (!this.canRead()) {\r\n            return \"\";\r\n        }\r\n        else if ((this.peek() != SYNTAX_QUOTE)) {\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.readerExpectedStartOfQuote().createWithContext(this);\r\n        }\r\n        this.skip();\r\n        let result = \"\";\r\n        let escaped = false;\r\n        while (this.canRead()) {\r\n            let c = this.read();\r\n            if (escaped) {\r\n                if (c == SYNTAX_QUOTE || c == SYNTAX_ESCAPE) {\r\n                    result += c;\r\n                    escaped = false;\r\n                }\r\n                else {\r\n                    this.setCursor(this.getCursor() - 1);\r\n                    throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.readerInvalidEscape().createWithContext(this, c);\r\n                }\r\n            }\r\n            else if (c == SYNTAX_ESCAPE) {\r\n                escaped = true;\r\n            }\r\n            else if (c == SYNTAX_QUOTE) {\r\n                return result;\r\n            }\r\n            else {\r\n                result += c;\r\n            }\r\n        }\r\n        throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.readerExpectedEndOfQuote().createWithContext(this);\r\n    }\r\n    readString() {\r\n        if (this.canRead() && (this.peek() === SYNTAX_QUOTE)) {\r\n            return this.readQuotedString();\r\n        }\r\n        else {\r\n            return this.readUnquotedString();\r\n        }\r\n    }\r\n    readBoolean() {\r\n        let start = this.cursor;\r\n        let value = this.readString();\r\n        if (value.length === 0) {\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.readerExpectedBool().createWithContext(this);\r\n        }\r\n        if (value === \"true\") {\r\n            return true;\r\n        }\r\n        else if (value === \"false\") {\r\n            return false;\r\n        }\r\n        else {\r\n            this.cursor = start;\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.readerInvalidBool().createWithContext(this, value);\r\n        }\r\n    }\r\n    expect(c) {\r\n        if (!this.canRead() || this.peek() !== c) {\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.readerExpectedSymbol().createWithContext(this, c);\r\n        }\r\n        this.skip();\r\n    }\r\n}\r\nexports.default = StringReader;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst BoolArgumentType_1 = __importDefault(require(\"./BoolArgumentType\"));\r\nconst IntegerArgumentType_1 = __importDefault(require(\"./IntegerArgumentType\"));\r\nconst FloatArgumentType_1 = __importDefault(require(\"./FloatArgumentType\"));\r\nconst StringArgumentType_1 = __importDefault(require(\"./StringArgumentType\"));\r\nexports.DefaultType = {\r\n    bool: BoolArgumentType_1.default.bool,\r\n    integer: IntegerArgumentType_1.default.integer,\r\n    float: FloatArgumentType_1.default.float,\r\n    word: StringArgumentType_1.default.word,\r\n    string: StringArgumentType_1.default.string,\r\n    greedyString: StringArgumentType_1.default.greedyString\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst EXAMPLES = [\"true\", \"false\"];\r\nclass BoolArgumentType {\r\n    constructor() {\r\n    }\r\n    static bool() {\r\n        return new BoolArgumentType();\r\n    }\r\n    static getBool(context, name) {\r\n        return context.getArgument(name, Boolean);\r\n    }\r\n    parse(reader) {\r\n        return reader.readBoolean();\r\n    }\r\n    listSuggestions(context, builder) {\r\n        if (\"true\".startsWith(builder.getRemaining().toLowerCase())) {\r\n            builder.suggest(\"true\");\r\n        }\r\n        if (\"false\".startsWith(builder.getRemaining().toLowerCase())) {\r\n            builder.suggest(\"false\");\r\n        }\r\n        return builder.buildPromise();\r\n    }\r\n    getExamples() {\r\n        return EXAMPLES;\r\n    }\r\n}\r\nexports.default = BoolArgumentType;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst CommandSyntaxException_1 = __importDefault(require(\"../exceptions/CommandSyntaxException\"));\r\nconst EXAMPLES = [\"0\", \"1.2\", \".5\", \"-1\", \"-.5\", \"-1234.56\"];\r\nclass FloatArgumentType {\r\n    constructor(minimum, maximum) {\r\n        this.minimum = minimum;\r\n        this.maximum = maximum;\r\n    }\r\n    static float(min = -Infinity, max = Infinity) {\r\n        return new FloatArgumentType(min, max);\r\n    }\r\n    static getFloat(context, name) {\r\n        return context.getArgument(name, Number);\r\n    }\r\n    getMinimum() {\r\n        return this.minimum;\r\n    }\r\n    getMaximum() {\r\n        return this.maximum;\r\n    }\r\n    parse(reader) {\r\n        let start = reader.getCursor();\r\n        let result = reader.readFloat();\r\n        if (result < this.minimum) {\r\n            reader.setCursor(start);\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.integerTooLow().createWithContext(reader, result, this.minimum);\r\n        }\r\n        if (result > this.maximum) {\r\n            reader.setCursor(start);\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.integerTooHigh().createWithContext(reader, result, this.maximum);\r\n        }\r\n        return result;\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (!(o instanceof FloatArgumentType))\r\n            return false;\r\n        return this.maximum == o.maximum && this.minimum == o.minimum;\r\n    }\r\n    toString() {\r\n        if (this.minimum === -Infinity && this.maximum === Infinity) {\r\n            return \"float()\";\r\n        }\r\n        else if (this.maximum == Infinity) {\r\n            return \"float(\" + this.minimum + \")\";\r\n        }\r\n        else {\r\n            return \"float(\" + this.minimum + \", \" + this.maximum + \")\";\r\n        }\r\n    }\r\n    getExamples() {\r\n        return EXAMPLES;\r\n    }\r\n}\r\nexports.default = FloatArgumentType;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst CommandSyntaxException_1 = __importDefault(require(\"../exceptions/CommandSyntaxException\"));\r\nconst EXAMPLES = [\"0\", \"123\", \"-123\"];\r\nclass IntegerArgumentType {\r\n    constructor(minimum, maximum) {\r\n        this.minimum = minimum;\r\n        this.maximum = maximum;\r\n    }\r\n    static integer(min = -Infinity, max = Infinity) {\r\n        return new IntegerArgumentType(min, max);\r\n    }\r\n    static getInteger(context, name) {\r\n        return context.getArgument(name, Number);\r\n    }\r\n    getMinimum() {\r\n        return this.minimum;\r\n    }\r\n    getMaximum() {\r\n        return this.maximum;\r\n    }\r\n    parse(reader) {\r\n        let start = reader.getCursor();\r\n        let result = reader.readInt();\r\n        if (result < this.minimum) {\r\n            reader.setCursor(start);\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.integerTooLow().createWithContext(reader, result, this.minimum);\r\n        }\r\n        if (result > this.maximum) {\r\n            reader.setCursor(start);\r\n            throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.integerTooHigh().createWithContext(reader, result, this.maximum);\r\n        }\r\n        return result;\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (!(o instanceof IntegerArgumentType))\r\n            return false;\r\n        return this.maximum == o.maximum && this.minimum == o.minimum;\r\n    }\r\n    toString() {\r\n        if (this.minimum === -Infinity && this.maximum === Infinity) {\r\n            return \"integer()\";\r\n        }\r\n        else if (this.maximum == Infinity) {\r\n            return \"integer(\" + this.minimum + \")\";\r\n        }\r\n        else {\r\n            return \"integer(\" + this.minimum + \", \" + this.maximum + \")\";\r\n        }\r\n    }\r\n    getExamples() {\r\n        return EXAMPLES;\r\n    }\r\n}\r\nexports.default = IntegerArgumentType;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst StringReader_1 = __importDefault(require(\"../StringReader\"));\r\nvar StringType;\r\n(function (StringType) {\r\n    StringType[\"SINGLE_WORD\"] = \"words_with_underscores\";\r\n    StringType[\"QUOTABLE_PHRASE\"] = \"\\\"quoted phrase\\\"\";\r\n    StringType[\"GREEDY_PHRASE\"] = \"words with spaces\";\r\n})(StringType = exports.StringType || (exports.StringType = {}));\r\nclass StringArgumentType {\r\n    constructor(type) {\r\n        this.type = type;\r\n    }\r\n    static word() {\r\n        return new StringArgumentType(StringType.SINGLE_WORD);\r\n    }\r\n    static string() {\r\n        return new StringArgumentType(StringType.QUOTABLE_PHRASE);\r\n    }\r\n    static greedyString() {\r\n        return new StringArgumentType(StringType.GREEDY_PHRASE);\r\n    }\r\n    static getString(context, name) {\r\n        return context.getArgument(name, String);\r\n    }\r\n    getType() {\r\n        return this.type;\r\n    }\r\n    parse(reader) {\r\n        if (this.type == StringType.GREEDY_PHRASE) {\r\n            let text = reader.getRemaining();\r\n            reader.setCursor(reader.getTotalLength());\r\n            return text;\r\n        }\r\n        else if (this.type == StringType.SINGLE_WORD) {\r\n            return reader.readUnquotedString();\r\n        }\r\n        else {\r\n            return reader.readString();\r\n        }\r\n    }\r\n    toString() {\r\n        return \"string()\";\r\n    }\r\n    static escapeIfRequired(input) {\r\n        for (let c of input) {\r\n            if (!StringReader_1.default.isAllowedInUnquotedString(c)) {\r\n                return StringArgumentType.escape(input);\r\n            }\r\n        }\r\n        return input;\r\n    }\r\n    static escape(input) {\r\n        let result = \"\\\"\";\r\n        for (let i = 0; i < input.length; i++) {\r\n            const c = input.charAt(i);\r\n            if (c == '\\\\' || c == '\"') {\r\n                result += '\\\\';\r\n            }\r\n            result += c;\r\n        }\r\n        result += \"\\\"\";\r\n        return result;\r\n    }\r\n}\r\nexports.default = StringArgumentType;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst CommandNode_1 = __importDefault(require(\"../tree/CommandNode\"));\r\nconst RootCommandNode_1 = __importDefault(require(\"../tree/RootCommandNode\"));\r\nclass ArgumentBuilder {\r\n    constructor() {\r\n        this.args = new RootCommandNode_1.default();\r\n        this.modifier = null;\r\n    }\r\n    then(arg) {\r\n        if (!(this.target == null)) {\r\n            throw new Error(\"Cannot add children to a redirected node\");\r\n        }\r\n        if (arg instanceof CommandNode_1.default)\r\n            this.args.addChild(arg);\r\n        else\r\n            this.args.addChild(arg.build());\r\n        return this.getThis();\r\n    }\r\n    getArguments() {\r\n        return this.args.getChildren();\r\n    }\r\n    executes(command) {\r\n        this.command = command;\r\n        return this.getThis();\r\n    }\r\n    getCommand() {\r\n        return this.command;\r\n    }\r\n    requires(requirement) {\r\n        this.requirement = requirement;\r\n        return this.getThis();\r\n    }\r\n    getRequirement() {\r\n        return this.requirement;\r\n    }\r\n    redirect(target, modifier) {\r\n        return this.forward(target, modifier == null ? null : (o) => [modifier.apply(o)], false);\r\n    }\r\n    fork(target, modifier) {\r\n        return this.forward(target, modifier, true);\r\n    }\r\n    forward(target, modifier, fork) {\r\n        if (this.args.getChildrenCount() > 0) {\r\n            throw new Error(\"Cannot forward a node with children\");\r\n        }\r\n        this.target = target;\r\n        this.modifier = modifier;\r\n        this.forks = fork;\r\n        return this.getThis();\r\n    }\r\n    getRedirect() {\r\n        return this.target;\r\n    }\r\n    getRedirectModifier() {\r\n        return this.modifier;\r\n    }\r\n    isFork() {\r\n        return this.forks;\r\n    }\r\n}\r\nexports.default = ArgumentBuilder;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst LiteralCommandNode_1 = __importDefault(require(\"../tree/LiteralCommandNode\"));\r\nconst ArgumentBuilder_1 = __importDefault(require(\"./ArgumentBuilder\"));\r\nclass LiteralArgumentBuilder extends ArgumentBuilder_1.default {\r\n    constructor(literal) {\r\n        super();\r\n        this.literal = literal;\r\n    }\r\n    static literal(name) {\r\n        return new LiteralArgumentBuilder(name);\r\n    }\r\n    getThis() {\r\n        return this;\r\n    }\r\n    getLiteral() {\r\n        return this.literal;\r\n    }\r\n    build() {\r\n        let result = new LiteralCommandNode_1.default(this.getLiteral(), this.getCommand(), this.getRequirement(), this.getRedirect(), this.getRedirectModifier(), this.isFork());\r\n        for (let arg of this.getArguments()) {\r\n            result.addChild(arg);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.default = LiteralArgumentBuilder;\r\nexports.literal = LiteralArgumentBuilder.literal;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ArgumentCommandNode_1 = __importDefault(require(\"../tree/ArgumentCommandNode\"));\r\nconst ArgumentBuilder_1 = __importDefault(require(\"./ArgumentBuilder\"));\r\nclass RequiredArgumentBuilder extends ArgumentBuilder_1.default {\r\n    constructor(name, type) {\r\n        super();\r\n        this.name = name;\r\n        this.type = type;\r\n    }\r\n    static argument(name, type) {\r\n        return new RequiredArgumentBuilder(name, type);\r\n    }\r\n    suggests(provider) {\r\n        this.suggestionsProvider = provider;\r\n        return this.getThis();\r\n    }\r\n    getSuggestionsProvider() {\r\n        return this.suggestionsProvider;\r\n    }\r\n    getThis() {\r\n        return this;\r\n    }\r\n    getType() {\r\n        return this.type;\r\n    }\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    build() {\r\n        let result = new ArgumentCommandNode_1.default(this.getName(), this.getType(), this.getCommand(), this.getRequirement(), this.getRedirect(), this.getRedirectModifier(), this.isFork(), this.getSuggestionsProvider());\r\n        for (let arg of this.getArguments()) {\r\n            result.addChild(arg);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.default = RequiredArgumentBuilder;\r\nexports.argument = RequiredArgumentBuilder.argument;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst isEqual_1 = __importDefault(require(\"../util/isEqual\"));\r\nclass CommandContext {\r\n    constructor(source, input, args, command, rootNode, nodes, range, child, modifier, forks) {\r\n        this.source = source;\r\n        this.input = input;\r\n        this.args = args;\r\n        this.command = command;\r\n        this.rootNode = rootNode;\r\n        this.nodes = nodes;\r\n        this.range = range;\r\n        this.child = child;\r\n        this.modifier = modifier;\r\n        this.forks = forks;\r\n    }\r\n    copyFor(source) {\r\n        if (this.source === source)\r\n            return this;\r\n        return new CommandContext(source, this.input, this.args, this.command, this.rootNode, this.nodes, this.range, this.child, this.modifier, this.forks);\r\n    }\r\n    getChild() {\r\n        return this.child;\r\n    }\r\n    getLastChild() {\r\n        let result = this;\r\n        while (!(result.getChild() == null)) {\r\n            result = result.getChild();\r\n        }\r\n        return result;\r\n    }\r\n    getCommand() {\r\n        return this.command;\r\n    }\r\n    getSource() {\r\n        return this.source;\r\n    }\r\n    getArgument(name, clazz) {\r\n        const arg = this.args.get(name);\r\n        if (arg == null) {\r\n            throw new Error(\"No such argument '\" + name + \"' exists on this command\");\r\n        }\r\n        let result = arg.getResult();\r\n        if (clazz == null) {\r\n            return result;\r\n        }\r\n        else {\r\n            return clazz(result);\r\n        }\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (!(o instanceof CommandContext))\r\n            return false;\r\n        if (!isEqual_1.default(this.args, o.args))\r\n            return false;\r\n        if (!this.rootNode.equals(o.rootNode))\r\n            return false;\r\n        if (this.nodes.length != o.nodes.length || !isEqual_1.default(this.nodes, o.nodes))\r\n            return false;\r\n        if (!(this.command == null) ? !isEqual_1.default(this.command, o.command) : o.command != null)\r\n            return false;\r\n        if (!isEqual_1.default(this.source, o.source))\r\n            return false;\r\n        if (!(this.child == null) ? !this.child.equals(o.child) : o.child != null)\r\n            return false;\r\n        return true;\r\n    }\r\n    getRedirectModifier() {\r\n        return this.modifier;\r\n    }\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    getInput() {\r\n        return this.input;\r\n    }\r\n    getRootNode() {\r\n        return this.rootNode;\r\n    }\r\n    getNodes() {\r\n        return this.nodes;\r\n    }\r\n    hasNodes() {\r\n        return this.nodes.length >= 0;\r\n    }\r\n    isForked() {\r\n        return this.forks;\r\n    }\r\n}\r\nexports.default = CommandContext;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst StringRange_1 = __importDefault(require(\"./StringRange\"));\r\nconst CommandContext_1 = __importDefault(require(\"./CommandContext\"));\r\nconst SuggestionContext_1 = __importDefault(require(\"./SuggestionContext\"));\r\nconst ParsedCommandNode_1 = __importDefault(require(\"./ParsedCommandNode\"));\r\nclass CommandContextBuilder {\r\n    constructor(dispatcher, source, rootNode, start) {\r\n        this.args = new Map();\r\n        this.nodes = [];\r\n        this.modifier = null;\r\n        this.rootNode = rootNode;\r\n        this.dispatcher = dispatcher;\r\n        this.source = source;\r\n        this.range = StringRange_1.default.at(start);\r\n    }\r\n    withSource(source) {\r\n        this.source = source;\r\n        return this;\r\n    }\r\n    getSource() {\r\n        return this.source;\r\n    }\r\n    getRootNode() {\r\n        return this.rootNode;\r\n    }\r\n    withArgument(name, argument) {\r\n        this.args.set(name, argument);\r\n        return this;\r\n    }\r\n    getArguments() {\r\n        return this.args;\r\n    }\r\n    withCommand(command) {\r\n        this.command = command;\r\n        return this;\r\n    }\r\n    withNode(node, range) {\r\n        this.nodes.push(new ParsedCommandNode_1.default(node, range));\r\n        this.range = StringRange_1.default.encompassing(this.range, range);\r\n        this.modifier = node.getRedirectModifier();\r\n        this.forks = node.isFork();\r\n        return this;\r\n    }\r\n    copy() {\r\n        const copy = new CommandContextBuilder(this.dispatcher, this.source, this.rootNode, this.range.getStart());\r\n        copy.command = this.command;\r\n        copy.args = new Map([...copy.args, ...this.args]);\r\n        copy.nodes.push(...this.nodes);\r\n        copy.child = this.child;\r\n        copy.range = this.range;\r\n        copy.forks = this.forks;\r\n        return copy;\r\n    }\r\n    withChild(child) {\r\n        this.child = child;\r\n        return this;\r\n    }\r\n    getChild() {\r\n        return this.child;\r\n    }\r\n    getLastChild() {\r\n        let result = this;\r\n        while (result.getChild() != null) {\r\n            result = result.getChild();\r\n        }\r\n        return result;\r\n    }\r\n    getCommand() {\r\n        return this.command;\r\n    }\r\n    getNodes() {\r\n        return this.nodes;\r\n    }\r\n    build(input) {\r\n        return new CommandContext_1.default(this.source, input, this.args, this.command, this.rootNode, this.nodes, this.range, this.child == null ? null : this.child.build(input), this.modifier, this.forks);\r\n    }\r\n    getDispatcher() {\r\n        return this.dispatcher;\r\n    }\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    findSuggestionContext(cursor) {\r\n        if ((this.range.getStart() <= cursor)) {\r\n            if ((this.range.getEnd() < cursor)) {\r\n                if ((this.child != null)) {\r\n                    return this.child.findSuggestionContext(cursor);\r\n                }\r\n                else if (this.nodes.length > 0) {\r\n                    let last = this.nodes[this.nodes.length - 1];\r\n                    return new SuggestionContext_1.default(last.getNode(), last.getRange().getEnd() + 1);\r\n                }\r\n                else {\r\n                    return new SuggestionContext_1.default(this.rootNode, this.range.getStart());\r\n                }\r\n            }\r\n            else {\r\n                let prev = this.rootNode;\r\n                for (let node of this.nodes) {\r\n                    let nodeRange = node.getRange();\r\n                    if (nodeRange.getStart() <= cursor && cursor <= nodeRange.getEnd()) {\r\n                        return new SuggestionContext_1.default(prev, nodeRange.getStart());\r\n                    }\r\n                    prev = node.getNode();\r\n                }\r\n                if ((prev == null)) {\r\n                    throw new Error(\"Can't find node before cursor\");\r\n                }\r\n                return new SuggestionContext_1.default(prev, this.range.getStart());\r\n            }\r\n        }\r\n        throw new Error(\"Can't find node before cursor\");\r\n    }\r\n}\r\nexports.default = CommandContextBuilder;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst StringRange_1 = __importDefault(require(\"./StringRange\"));\r\nclass ParsedArgument {\r\n    constructor(start, end, result) {\r\n        this.range = StringRange_1.default.between(start, end);\r\n        this.result = result;\r\n    }\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    getResult() {\r\n        return this.result;\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (!(o instanceof ParsedArgument))\r\n            return false;\r\n        return this.range.equals(o.range) && this.result === o.result;\r\n    }\r\n}\r\nexports.default = ParsedArgument;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ParsedCommandNode {\r\n    constructor(node, range) {\r\n        this.node = node;\r\n        this.range = range;\r\n    }\r\n    getNode() {\r\n        return this.node;\r\n    }\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    toString() {\r\n        return this.node + \"@\" + this.range;\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (o == null || !(o instanceof ParsedCommandNode)) {\r\n            return false;\r\n        }\r\n        return this.node.equals(o.node) && this.range.equals(o.range);\r\n    }\r\n}\r\nexports.default = ParsedCommandNode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass StringRange {\r\n    constructor(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n    static at(pos) {\r\n        return new StringRange(pos, pos);\r\n    }\r\n    static between(start, end) {\r\n        return new StringRange(start, end);\r\n    }\r\n    static encompassing(a, b) {\r\n        return new StringRange(Math.min(a.getStart(), b.getStart()), Math.max(a.getEnd(), b.getEnd()));\r\n    }\r\n    getStart() {\r\n        return this.start;\r\n    }\r\n    getEnd() {\r\n        return this.end;\r\n    }\r\n    get(str) {\r\n        if (typeof str === \"string\")\r\n            return str.substring(this.start, this.end);\r\n        else\r\n            return str.getString().substring(this.start, this.end);\r\n    }\r\n    isEmpty() {\r\n        return this.start === this.end;\r\n    }\r\n    getLength() {\r\n        return this.end - this.start;\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (!(o instanceof StringRange))\r\n            return false;\r\n        return this.start === o.start && this.end == o.end;\r\n    }\r\n    toString() {\r\n        return \"StringRange{\" + \"start=\" + this.start + \", end=\" + this.end + '}';\r\n    }\r\n}\r\nexports.default = StringRange;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass SuggestionContext {\r\n    constructor(parent, startPos) {\r\n        this.parent = parent;\r\n        this.startPos = startPos;\r\n    }\r\n}\r\nexports.default = SuggestionContext;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst LiteralMessage_1 = __importDefault(require(\"../LiteralMessage\"));\r\nconst SimpleCommandExceptionType_1 = __importDefault(require(\"./SimpleCommandExceptionType\"));\r\nconst DynamicCommandExceptionType_1 = __importDefault(require(\"./DynamicCommandExceptionType\"));\r\nclass BuiltInExceptions {\r\n    floatTooLow() {\r\n        return BuiltInExceptions.FLOAT_TOO_SMALL;\r\n    }\r\n    floatTooHigh() {\r\n        return BuiltInExceptions.FLOAT_TOO_BIG;\r\n    }\r\n    integerTooLow() {\r\n        return BuiltInExceptions.INTEGER_TOO_SMALL;\r\n    }\r\n    integerTooHigh() {\r\n        return BuiltInExceptions.INTEGER_TOO_BIG;\r\n    }\r\n    literalIncorrect() {\r\n        return BuiltInExceptions.LITERAL_INCORRECT;\r\n    }\r\n    readerExpectedStartOfQuote() {\r\n        return BuiltInExceptions.READER_EXPECTED_START_OF_QUOTE;\r\n    }\r\n    readerExpectedEndOfQuote() {\r\n        return BuiltInExceptions.READER_EXPECTED_END_OF_QUOTE;\r\n    }\r\n    readerInvalidEscape() {\r\n        return BuiltInExceptions.READER_INVALID_ESCAPE;\r\n    }\r\n    readerInvalidBool() {\r\n        return BuiltInExceptions.READER_INVALID_BOOL;\r\n    }\r\n    readerInvalidInt() {\r\n        return BuiltInExceptions.READER_INVALID_INT;\r\n    }\r\n    readerExpectedInt() {\r\n        return BuiltInExceptions.READER_EXPECTED_INT;\r\n    }\r\n    readerInvalidFloat() {\r\n        return BuiltInExceptions.READER_INVALID_FLOAT;\r\n    }\r\n    readerExpectedFloat() {\r\n        return BuiltInExceptions.READER_EXPECTED_FLOAT;\r\n    }\r\n    readerExpectedBool() {\r\n        return BuiltInExceptions.READER_EXPECTED_BOOL;\r\n    }\r\n    readerExpectedSymbol() {\r\n        return BuiltInExceptions.READER_EXPECTED_SYMBOL;\r\n    }\r\n    dispatcherUnknownCommand() {\r\n        return BuiltInExceptions.DISPATCHER_UNKNOWN_COMMAND;\r\n    }\r\n    dispatcherUnknownArgument() {\r\n        return BuiltInExceptions.DISPATCHER_UNKNOWN_ARGUMENT;\r\n    }\r\n    dispatcherExpectedArgumentSeparator() {\r\n        return BuiltInExceptions.DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR;\r\n    }\r\n    dispatcherParseException() {\r\n        return BuiltInExceptions.DISPATCHER_PARSE_EXCEPTION;\r\n    }\r\n}\r\nBuiltInExceptions.FLOAT_TOO_SMALL = new DynamicCommandExceptionType_1.default((found, min) => new LiteralMessage_1.default(\"Float must not be less than \" + min + \", found \" + found));\r\nBuiltInExceptions.FLOAT_TOO_BIG = new DynamicCommandExceptionType_1.default((found, max) => new LiteralMessage_1.default(\"Float must not be more than \" + max + \", found \" + found));\r\nBuiltInExceptions.INTEGER_TOO_SMALL = new DynamicCommandExceptionType_1.default((found, min) => new LiteralMessage_1.default(\"Integer must not be less than \" + min + \", found \" + found));\r\nBuiltInExceptions.INTEGER_TOO_BIG = new DynamicCommandExceptionType_1.default((found, max) => new LiteralMessage_1.default(\"Integer must not be more than \" + max + \", found \" + found));\r\nBuiltInExceptions.LITERAL_INCORRECT = new DynamicCommandExceptionType_1.default(expected => new LiteralMessage_1.default(\"Expected literal \" + expected));\r\nBuiltInExceptions.READER_EXPECTED_START_OF_QUOTE = new SimpleCommandExceptionType_1.default(new LiteralMessage_1.default(\"Expected quote to start a string\"));\r\nBuiltInExceptions.READER_EXPECTED_END_OF_QUOTE = new SimpleCommandExceptionType_1.default(new LiteralMessage_1.default(\"Unclosed quoted string\"));\r\nBuiltInExceptions.READER_INVALID_ESCAPE = new DynamicCommandExceptionType_1.default(character => new LiteralMessage_1.default(\"Invalid escape sequence '\" + character + \"' in quoted string\"));\r\nBuiltInExceptions.READER_INVALID_BOOL = new DynamicCommandExceptionType_1.default(value => new LiteralMessage_1.default(\"Invalid bool, expected true or false but found '\" + value + \"'\"));\r\nBuiltInExceptions.READER_INVALID_INT = new DynamicCommandExceptionType_1.default(value => new LiteralMessage_1.default(\"Invalid integer '\" + value + \"'\"));\r\nBuiltInExceptions.READER_EXPECTED_INT = new SimpleCommandExceptionType_1.default(new LiteralMessage_1.default(\"Expected integer\"));\r\nBuiltInExceptions.READER_INVALID_FLOAT = new DynamicCommandExceptionType_1.default(value => new LiteralMessage_1.default(\"Invalid float '\" + value + \"'\"));\r\nBuiltInExceptions.READER_EXPECTED_FLOAT = new SimpleCommandExceptionType_1.default(new LiteralMessage_1.default(\"Expected float\"));\r\nBuiltInExceptions.READER_EXPECTED_BOOL = new SimpleCommandExceptionType_1.default(new LiteralMessage_1.default(\"Expected bool\"));\r\nBuiltInExceptions.READER_EXPECTED_SYMBOL = new DynamicCommandExceptionType_1.default(symbol => new LiteralMessage_1.default(\"Expected '\" + symbol + \"'\"));\r\nBuiltInExceptions.DISPATCHER_UNKNOWN_COMMAND = new SimpleCommandExceptionType_1.default(new LiteralMessage_1.default(\"Unknown command\"));\r\nBuiltInExceptions.DISPATCHER_UNKNOWN_ARGUMENT = new SimpleCommandExceptionType_1.default(new LiteralMessage_1.default(\"Incorrect argument for command\"));\r\nBuiltInExceptions.DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR = new SimpleCommandExceptionType_1.default(new LiteralMessage_1.default(\"Expected whitespace to end one argument, but found trailing data\"));\r\nBuiltInExceptions.DISPATCHER_PARSE_EXCEPTION = new DynamicCommandExceptionType_1.default(message => new LiteralMessage_1.default((\"Could not parse command: \" + message)));\r\nexports.default = BuiltInExceptions;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst BuiltInExceptions_1 = __importDefault(require(\"./BuiltInExceptions\"));\r\nclass CommandSyntaxException extends Error {\r\n    constructor(type, message, input = null, cursor = -1) {\r\n        super(message.getString());\r\n        Error.captureStackTrace(this, CommandSyntaxException);\r\n        this.type = type;\r\n        this.__message = message;\r\n        this.input = input;\r\n        this.cursor = cursor;\r\n        this.message = this.getMessage();\r\n    }\r\n    getMessage() {\r\n        let message = this.__message.getString();\r\n        let context = this.getContext();\r\n        if (context != null) {\r\n            message += \" at position \" + this.cursor + \": \" + context;\r\n        }\r\n        return message;\r\n    }\r\n    getRawMessage() {\r\n        return this.__message;\r\n    }\r\n    getContext() {\r\n        if (this.input == null || this.cursor < 0) {\r\n            return null;\r\n        }\r\n        let builder = \"\";\r\n        let cursor = Math.min(this.input.length, this.cursor);\r\n        if (cursor > CommandSyntaxException.CONTEXT_AMOUNT) {\r\n            builder += \"...\";\r\n        }\r\n        builder += this.input.substring(Math.max(0, cursor - CommandSyntaxException.CONTEXT_AMOUNT), cursor);\r\n        builder += \"<--[HERE]\";\r\n        return builder;\r\n    }\r\n    getType() {\r\n        return this.type;\r\n    }\r\n    getInput() {\r\n        return this.input;\r\n    }\r\n    getCursor() {\r\n        return this.cursor;\r\n    }\r\n    toString() {\r\n        return this.message;\r\n    }\r\n}\r\nCommandSyntaxException.CONTEXT_AMOUNT = 10;\r\nCommandSyntaxException.BUILT_IN_EXCEPTIONS = new BuiltInExceptions_1.default();\r\nexports.default = CommandSyntaxException;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst CommandSyntaxException_1 = __importDefault(require(\"./CommandSyntaxException\"));\r\nclass DynamicCommandExceptionType {\r\n    constructor(fn) {\r\n        this.fn = fn;\r\n        Error.captureStackTrace(this, DynamicCommandExceptionType);\r\n    }\r\n    create(...args) {\r\n        return new CommandSyntaxException_1.default(this, this.fn(...args));\r\n    }\r\n    createWithContext(reader, ...args) {\r\n        return new CommandSyntaxException_1.default(this, this.fn(...args), reader.getString(), reader.getCursor());\r\n    }\r\n}\r\nexports.default = DynamicCommandExceptionType;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst CommandSyntaxException_1 = __importDefault(require(\"./CommandSyntaxException\"));\r\nclass SimpleCommandExceptionType {\r\n    constructor(message) {\r\n        this.message = message;\r\n        Error.captureStackTrace(this, SimpleCommandExceptionType);\r\n    }\r\n    create() {\r\n        return new CommandSyntaxException_1.default(this, this.message);\r\n    }\r\n    createWithContext(reader) {\r\n        return new CommandSyntaxException_1.default(this, this.message, reader.getString(), reader.getCursor());\r\n    }\r\n    toString() {\r\n        return this.message.getString();\r\n    }\r\n}\r\nexports.default = SimpleCommandExceptionType;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Suggestion_1 = __importDefault(require(\"./Suggestion\"));\r\nclass IntegerSuggestion extends Suggestion_1.default {\r\n    constructor(range, value, tooltip = null) {\r\n        super(range, value.toString(), tooltip);\r\n        this.value = value;\r\n    }\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (!(o instanceof IntegerSuggestion))\r\n            return false;\r\n        return this.value == o.value && super.equals(o);\r\n    }\r\n    toString() {\r\n        return \"IntegerSuggestion{\" +\r\n            \"value=\" + this.value +\r\n            \", range=\" + this.getRange() +\r\n            \", text='\" + this.getText() + '\\'' +\r\n            \", tooltip='\" + this.getTooltip() + '\\'' +\r\n            '}';\r\n    }\r\n    compareTo(o) {\r\n        if (o instanceof IntegerSuggestion) {\r\n            return this.value < o.value ? 1 : -1;\r\n        }\r\n        return super.compareTo(o);\r\n    }\r\n    compareToIgnoreCase(b) {\r\n        return this.compareTo(b);\r\n    }\r\n}\r\nexports.default = IntegerSuggestion;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst isEqual_1 = __importDefault(require(\"../util/isEqual\"));\r\nclass Suggestion {\r\n    constructor(range, text, tooltip = null) {\r\n        this.range = range;\r\n        this.text = text;\r\n        this.tooltip = tooltip;\r\n    }\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    getText() {\r\n        return this.text;\r\n    }\r\n    getTooltip() {\r\n        return this.tooltip;\r\n    }\r\n    apply(input) {\r\n        if (this.range.getStart() === 0 && this.range.getEnd() == input.length) {\r\n            return this.text;\r\n        }\r\n        let result = \"\";\r\n        if (this.range.getStart() > 0) {\r\n            result += input.substring(0, this.range.getStart());\r\n        }\r\n        result += this.text;\r\n        if (this.range.getEnd() < input.length) {\r\n            result += input.substring(this.range.getEnd());\r\n        }\r\n        return result;\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (!(o instanceof Suggestion))\r\n            return false;\r\n        return isEqual_1.default(this.range, o.range) && (this.text === o.text) && isEqual_1.default(this.tooltip, o.tooltip);\r\n    }\r\n    toString() {\r\n        return \"Suggestion{\" +\r\n            \"range=\" + this.range +\r\n            \", text='\" + this.text + '\\'' +\r\n            \", tooltip='\" + this.tooltip + '\\'' +\r\n            '}';\r\n    }\r\n    compareTo(o) {\r\n        return this.text < o.text ? 1 : -1;\r\n    }\r\n    compareToIgnoreCase(b) {\r\n        return this.text.toLowerCase() < b.text.toLowerCase() ? 1 : -1;\r\n    }\r\n    expand(command, range) {\r\n        if (range.equals(this.range)) {\r\n            return this;\r\n        }\r\n        let result = \"\";\r\n        if (range.getStart() < this.range.getStart()) {\r\n            result += command.substring(range.getStart(), this.range.getStart());\r\n        }\r\n        result += this.text;\r\n        if (range.getEnd() > this.range.getEnd()) {\r\n            result += command.substring(this.range.getEnd(), range.getEnd());\r\n        }\r\n        return new Suggestion(range, result, this.tooltip);\r\n    }\r\n}\r\nexports.default = Suggestion;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst isEqual_1 = __importDefault(require(\"../util/isEqual\"));\r\nconst StringRange_1 = __importDefault(require(\"../context/StringRange\"));\r\nclass Suggestions {\r\n    constructor(range, suggestions) {\r\n        this.range = range;\r\n        this.suggestions = suggestions;\r\n    }\r\n    getRange() {\r\n        return this.range;\r\n    }\r\n    getList() {\r\n        return this.suggestions;\r\n    }\r\n    isEmpty() {\r\n        return this.suggestions.length === 0;\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (!(o instanceof Suggestions))\r\n            return false;\r\n        return this.range.equals(o.range) && isEqual_1.default(this.suggestions, o.suggestions);\r\n    }\r\n    toString() {\r\n        return \"Suggestions{\" +\r\n            \"range=\" + this.range +\r\n            \", suggestions=\" + this.suggestions + '}';\r\n    }\r\n    static empty() {\r\n        return Promise.resolve(this.EMPTY);\r\n    }\r\n    static merge(command, input) {\r\n        if (input.length === 0) {\r\n            return this.EMPTY;\r\n        }\r\n        else if (input.length === 1) {\r\n            return input[0];\r\n        }\r\n        const texts = [];\r\n        for (let suggestions of input) {\r\n            texts.push(...suggestions.getList());\r\n        }\r\n        return Suggestions.create(command, texts);\r\n    }\r\n    static create(command, suggestions) {\r\n        if (suggestions.length === 0) {\r\n            return this.EMPTY;\r\n        }\r\n        let start = Infinity;\r\n        let end = -Infinity;\r\n        for (let suggestion of suggestions) {\r\n            start = Math.min(suggestion.getRange().getStart(), start);\r\n            end = Math.max(suggestion.getRange().getEnd(), end);\r\n        }\r\n        let range = new StringRange_1.default(start, end);\r\n        const texts = [];\r\n        for (let suggestion of suggestions) {\r\n            texts.push(suggestion.expand(command, range));\r\n        }\r\n        const sorted = texts.sort((a, b) => a.compareToIgnoreCase(b));\r\n        return new Suggestions(range, sorted);\r\n    }\r\n}\r\nSuggestions.EMPTY = new Suggestions(StringRange_1.default.at(0), []);\r\nexports.default = Suggestions;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst StringRange_1 = __importDefault(require(\"../context/StringRange\"));\r\nconst Suggestion_1 = __importDefault(require(\"./Suggestion\"));\r\nconst Suggestions_1 = __importDefault(require(\"./Suggestions\"));\r\nconst IntegerSuggestion_1 = __importDefault(require(\"./IntegerSuggestion\"));\r\nclass SuggestionsBuilder {\r\n    constructor(input, start) {\r\n        this.result = [];\r\n        this.input = input;\r\n        this.start = start;\r\n        this.remaining = input.substring(start);\r\n    }\r\n    getInput() {\r\n        return this.input;\r\n    }\r\n    getStart() {\r\n        return this.start;\r\n    }\r\n    getRemaining() {\r\n        return this.remaining;\r\n    }\r\n    build() {\r\n        return Suggestions_1.default.create(this.input, this.result);\r\n    }\r\n    buildPromise() {\r\n        return Promise.resolve(this.build());\r\n    }\r\n    suggest(text, tooltip = null) {\r\n        if (typeof text === \"number\") {\r\n            this.result.push(new IntegerSuggestion_1.default(StringRange_1.default.between(this.start, this.input.length), text, tooltip));\r\n            return this;\r\n        }\r\n        if (text === this.remaining)\r\n            return this;\r\n        this.result.push(new Suggestion_1.default(StringRange_1.default.between(this.start, this.input.length), text, tooltip));\r\n        return this;\r\n    }\r\n    add(other) {\r\n        this.result.push(...other.result);\r\n        return this;\r\n    }\r\n    createOffset(start) {\r\n        return new SuggestionsBuilder(this.input, this.start);\r\n    }\r\n    restart() {\r\n        return new SuggestionsBuilder(this.input, this.start);\r\n    }\r\n}\r\nexports.default = SuggestionsBuilder;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst isEqual_1 = __importDefault(require(\"../util/isEqual\"));\r\nconst StringReader_1 = __importDefault(require(\"../StringReader\"));\r\nconst RequiredArgumentBuilder_1 = __importDefault(require(\"../builder/RequiredArgumentBuilder\"));\r\nconst ParsedArgument_1 = __importDefault(require(\"../context/ParsedArgument\"));\r\nconst Suggestions_1 = __importDefault(require(\"../suggestion/Suggestions\"));\r\nconst CommandNode_1 = __importDefault(require(\"./CommandNode\"));\r\nconst USAGE_ARGUMENT_OPEN = \"<\";\r\nconst USAGE_ARGUMENT_CLOSE = \">\";\r\nclass ArgumentCommandNode extends CommandNode_1.default {\r\n    constructor(name, type, command, requirement, redirect, modifier, forks, customSuggestions) {\r\n        super(command, requirement, redirect, modifier, forks);\r\n        this.name = name;\r\n        this.type = type;\r\n        this.customSuggestions = customSuggestions;\r\n    }\r\n    getNodeType() {\r\n        return \"argument\";\r\n    }\r\n    getType() {\r\n        return this.type;\r\n    }\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    getUsageText() {\r\n        return USAGE_ARGUMENT_OPEN + this.name + USAGE_ARGUMENT_CLOSE;\r\n    }\r\n    getCustomSuggestions() {\r\n        return this.customSuggestions;\r\n    }\r\n    parse(reader, contextBuilder) {\r\n        let start = reader.getCursor();\r\n        let result = this.type.parse(reader);\r\n        let parsed = new ParsedArgument_1.default(start, reader.getCursor(), result);\r\n        contextBuilder.withArgument(this.name, parsed);\r\n        contextBuilder.withNode(this, parsed.getRange());\r\n    }\r\n    listSuggestions(context, builder) {\r\n        if (this.customSuggestions == null) {\r\n            if (typeof this.type.listSuggestions === \"function\")\r\n                return this.type.listSuggestions(context, builder);\r\n            else\r\n                return Suggestions_1.default.empty();\r\n        }\r\n        else {\r\n            return this.customSuggestions.getSuggestions(context, builder);\r\n        }\r\n    }\r\n    createBuilder() {\r\n        let builder = RequiredArgumentBuilder_1.default.argument(this.name, this.type);\r\n        builder.requires(this.getRequirement());\r\n        builder.forward(this.getRedirect(), this.getRedirectModifier(), this.isFork());\r\n        builder.suggests(this.customSuggestions);\r\n        if (this.getCommand() != null) {\r\n            builder.executes(this.getCommand());\r\n        }\r\n        return builder;\r\n    }\r\n    isValidInput(input) {\r\n        try {\r\n            let reader = new StringReader_1.default(input);\r\n            this.type.parse(reader);\r\n            return !reader.canRead() || reader.peek() == ' ';\r\n        }\r\n        catch (ignored) {\r\n        }\r\n        return false;\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (!(o instanceof ArgumentCommandNode))\r\n            return false;\r\n        if (!(this.name === o.name))\r\n            return false;\r\n        if (!isEqual_1.default(this.type, o.type))\r\n            return false;\r\n        return super.equals(o);\r\n    }\r\n    getSortedKey() {\r\n        return this.name;\r\n    }\r\n    getExamples() {\r\n        return typeof this.type.getExamples === \"function\" ? this.type.getExamples() : [];\r\n    }\r\n    toString() {\r\n        return \"<argument \" + this.name + \":\" + this.type + \">\";\r\n    }\r\n}\r\nexports.default = ArgumentCommandNode;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst isEqual_1 = __importDefault(require(\"../util/isEqual\"));\r\nclass CommandNode {\r\n    constructor(command, requirement, redirect, modifier, forks) {\r\n        this.children = new Map();\r\n        this.literals = new Map();\r\n        this.args = new Map();\r\n        this.command = command;\r\n        this.requirement = requirement || (() => true);\r\n        this.redirect = redirect;\r\n        this.modifier = modifier;\r\n        this.forks = forks;\r\n    }\r\n    getCommand() {\r\n        return this.command;\r\n    }\r\n    getChildren() {\r\n        return this.children.values();\r\n    }\r\n    getChildrenCount() {\r\n        return this.children.size;\r\n    }\r\n    getChild(name) {\r\n        return this.children.get(name);\r\n    }\r\n    getRedirect() {\r\n        return this.redirect;\r\n    }\r\n    getRedirectModifier() {\r\n        return this.modifier;\r\n    }\r\n    canUse(source) {\r\n        return this.requirement(source);\r\n    }\r\n    addChild(node) {\r\n        if (node.getNodeType() === \"root\") {\r\n            throw new Error(\"Cannot add a RootCommandNode as a child to any other CommandNode\");\r\n        }\r\n        let child = this.children.get(node.getName());\r\n        if (child != null) {\r\n            //  We've found something to merge onto\r\n            if ((node.getCommand() != null)) {\r\n                child.command = node.getCommand();\r\n            }\r\n            for (let grandchild of node.getChildren()) {\r\n                child.addChild(grandchild);\r\n            }\r\n        }\r\n        else {\r\n            this.children.set(node.getName(), node);\r\n            if (node.getNodeType() === \"literal\") {\r\n                this.literals.set(node.getName(), node);\r\n            }\r\n            else if (node.getNodeType() === \"argument\") {\r\n                this.args.set(node.getName(), node);\r\n            }\r\n        }\r\n        this.children = new Map([...this.children.entries()].sort((a, b) => a[1].compareTo(b[1])));\r\n    }\r\n    findAmbiguities(consumer) {\r\n        let matches = [];\r\n        for (let child of this.children.values()) {\r\n            for (let sibling of this.children.values()) {\r\n                if (child === sibling) {\r\n                    continue;\r\n                }\r\n                for (let input of child.getExamples()) {\r\n                    if (sibling.isValidInput(input)) {\r\n                        matches.push(input);\r\n                    }\r\n                }\r\n                if (matches.length > 0) {\r\n                    consumer.ambiguous(this, child, sibling, matches);\r\n                    matches = [];\r\n                }\r\n            }\r\n            child.findAmbiguities(consumer);\r\n        }\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (!(o instanceof CommandNode))\r\n            return false;\r\n        if (this.children.size !== o.children.size) {\r\n            return false;\r\n        }\r\n        if (!isEqual_1.default(this.children, o.children))\r\n            return false;\r\n        if (this.command != null ? !isEqual_1.default(this.command, o.command) : o.command != null)\r\n            return false;\r\n        return true;\r\n    }\r\n    getRequirement() {\r\n        return this.requirement;\r\n    }\r\n    getRelevantNodes(input) {\r\n        if (this.literals.size > 0) {\r\n            let cursor = input.getCursor();\r\n            while ((input.canRead()\r\n                && (input.peek() != ' '))) {\r\n                input.skip();\r\n            }\r\n            let text = input.getString().substring(cursor, input.getCursor());\r\n            input.setCursor(cursor);\r\n            let literal = this.literals.get(text);\r\n            if (literal != null) {\r\n                return [literal];\r\n            }\r\n            else {\r\n                return this.args.values();\r\n            }\r\n        }\r\n        else {\r\n            return this.args.values();\r\n        }\r\n    }\r\n    compareTo(o) {\r\n        if (this.getNodeType() === o.getNodeType()) {\r\n            return this.getSortedKey() > o.getSortedKey() ? 1 : -1;\r\n        }\r\n        return (o.getNodeType() === \"literal\") ? 1 : -1;\r\n    }\r\n    isFork() {\r\n        return this.forks;\r\n    }\r\n}\r\nexports.default = CommandNode;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst CommandNode_1 = __importDefault(require(\"./CommandNode\"));\r\nconst StringReader_1 = __importDefault(require(\"../StringReader\"));\r\nconst LiteralArgumentBuilder_1 = __importDefault(require(\"../builder/LiteralArgumentBuilder\"));\r\nconst StringRange_1 = __importDefault(require(\"../context/StringRange\"));\r\nconst CommandSyntaxException_1 = __importDefault(require(\"../exceptions/CommandSyntaxException\"));\r\nconst Suggestions_1 = __importDefault(require(\"../suggestion/Suggestions\"));\r\nclass LiteralCommandNode extends CommandNode_1.default {\r\n    constructor(literal, command, requirement, redirect, modifier, forks) {\r\n        super(command, requirement, redirect, modifier, forks);\r\n        this.literal = literal;\r\n    }\r\n    getNodeType() {\r\n        return \"literal\";\r\n    }\r\n    getLiteral() {\r\n        return this.literal;\r\n    }\r\n    getName() {\r\n        return this.literal;\r\n    }\r\n    parse(reader, contextBuilder) {\r\n        let start = reader.getCursor();\r\n        let end = this.__parse(reader);\r\n        if (end > -1) {\r\n            contextBuilder.withNode(this, StringRange_1.default.between(start, end));\r\n            return;\r\n        }\r\n        throw CommandSyntaxException_1.default.BUILT_IN_EXCEPTIONS.literalIncorrect().createWithContext(reader, this.literal);\r\n    }\r\n    __parse(reader) {\r\n        let start = reader.getCursor();\r\n        if (reader.canRead(this.literal.length)) {\r\n            let end = start + this.literal.length;\r\n            if (reader.getString().substring(start, end) === this.literal) {\r\n                reader.setCursor(end);\r\n                if (!reader.canRead() || reader.peek() == ' ') {\r\n                    return end;\r\n                }\r\n                else {\r\n                    reader.setCursor(start);\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    listSuggestions(context, builder) {\r\n        if (this.literal.toLowerCase().startsWith(builder.getRemaining().toLowerCase())) {\r\n            return builder.suggest(this.literal).buildPromise();\r\n        }\r\n        else {\r\n            return Suggestions_1.default.empty();\r\n        }\r\n    }\r\n    isValidInput(input) {\r\n        return this.__parse(new StringReader_1.default(input)) > -1;\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (!(o instanceof LiteralCommandNode))\r\n            return false;\r\n        if (!(this.literal === o.literal))\r\n            return false;\r\n        return super.equals(o);\r\n    }\r\n    getUsageText() {\r\n        return this.literal;\r\n    }\r\n    createBuilder() {\r\n        let builder = LiteralArgumentBuilder_1.default.literal(this.literal);\r\n        builder.requires(this.getRequirement());\r\n        builder.forward(this.getRedirect(), this.getRedirectModifier(), this.isFork());\r\n        if (this.getCommand() != null)\r\n            builder.executes(this.getCommand());\r\n        return builder;\r\n    }\r\n    getSortedKey() {\r\n        return this.literal;\r\n    }\r\n    getExamples() {\r\n        return [this.literal];\r\n    }\r\n    toString() {\r\n        return \"<literal \" + this.literal + \">\";\r\n    }\r\n}\r\nexports.default = LiteralCommandNode;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst CommandNode_1 = __importDefault(require(\"./CommandNode\"));\r\nconst Suggestions_1 = __importDefault(require(\"../suggestion/Suggestions\"));\r\nclass RootCommandNode extends CommandNode_1.default {\r\n    constructor() {\r\n        super(null, s => true, null, (s) => s.getSource(), false);\r\n    }\r\n    getNodeType() {\r\n        return \"root\";\r\n    }\r\n    getName() {\r\n        return \"\";\r\n    }\r\n    getUsageText() {\r\n        return \"\";\r\n    }\r\n    parse(reader, contextBuilder) {\r\n    }\r\n    listSuggestions(context, builder) {\r\n        return Suggestions_1.default.empty();\r\n    }\r\n    isValidInput(input) {\r\n        return false;\r\n    }\r\n    equals(o) {\r\n        if (this === o)\r\n            return true;\r\n        if (!(o instanceof RootCommandNode))\r\n            return false;\r\n        return super.equals(o);\r\n    }\r\n    createBuilder() {\r\n        throw new Error(\"Cannot convert root into a builder\");\r\n    }\r\n    getSortedKey() {\r\n        return \"\";\r\n    }\r\n    getExamples() {\r\n        return [];\r\n    }\r\n    toString() {\r\n        return \"<root>\";\r\n    }\r\n}\r\nexports.default = RootCommandNode;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction isEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    if (typeof a != typeof b)\r\n        return false;\r\n    if (!(a instanceof Object))\r\n        return false;\r\n    if (typeof a === \"function\")\r\n        return a.toString() === b.toString();\r\n    if (a.constructor !== b.constructor)\r\n        return false;\r\n    if (a instanceof Map)\r\n        return isMapEqual(a, b);\r\n    if (a instanceof Set)\r\n        return isArrayEqual([...a], [...b]);\r\n    if (a instanceof Array)\r\n        return isArrayEqual(a, b);\r\n    if (typeof a === \"object\")\r\n        return isObjectEqual(a, b);\r\n    return false;\r\n}\r\nexports.default = isEqual;\r\nfunction isMapEqual(a, b) {\r\n    if (a.size != b.size)\r\n        return false;\r\n    for (let [key, val] of a) {\r\n        const testVal = b.get(key);\r\n        if (!isEqual(testVal, val))\r\n            return false;\r\n        if (testVal === undefined && !b.has(key))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isArrayEqual(a, b) {\r\n    if (a.length != b.length)\r\n        return false;\r\n    for (let i = 0; i < a.length; i++)\r\n        if (!isEqual(a[i], b[i]))\r\n            return false;\r\n    return true;\r\n}\r\nfunction isObjectEqual(a, b) {\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    if (aKeys.length != bKeys.length)\r\n        return false;\r\n    if (!aKeys.every(key => b.hasOwnProperty(key)))\r\n        return false;\r\n    return aKeys.every((key) => {\r\n        return isEqual(a[key], b[key]);\r\n    });\r\n}\r\n;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import {\r\n\tSimpleCommandExceptionType,\r\n\tLiteralMessage,\r\n\tSuggestions,\r\n\tStringReader,\r\n\tCommandSyntaxException,\r\n\tCommandContext,\r\n\tSuggestionsBuilder\r\n} from \"./node_modules/node-brigadier/dist/index.js\"\r\n\r\nStringReader.prototype.readLocationLiteral = function readLocationLiteral(reader) {\r\n\r\n\tfunction isAllowedLocationLiteral(c) {\r\n\t\treturn c == '~' || c == '^';\r\n\t}\r\n\r\n\tlet start = this.cursor;\r\n\twhile (this.canRead() && (StringReader.isAllowedNumber(this.peek()) || isAllowedLocationLiteral(this.peek()))) {\r\n\t\tthis.skip();\r\n\t}\r\n\tlet number = this.string.substring(start, this.cursor);\r\n\tif (number.length === 0) {\r\n\t\tthrow CommandSyntaxException.BUILT_IN_EXCEPTIONS.readerExpectedInt().createWithContext(this);\r\n\t}\r\n\r\n\tif(number.startsWith(\"~\") || number.startsWith(\"^\")) {\r\n\t\tif(number.length === 1) {\r\n\t\t\t// Accept.\r\n\t\t\treturn number;\r\n\t\t} else {\r\n\t\t\tnumber = number.slice(1);\r\n\t\t}\r\n\t}\r\n\tconst result = parseInt(number);\r\n\tif (isNaN(result) || result !== parseFloat(number)) {\r\n\t\tthis.cursor = start;\r\n\t\tthrow CommandSyntaxException.BUILT_IN_EXCEPTIONS.readerInvalidInt().createWithContext(this, number);\r\n\t} else {\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\n/**\r\n * Helper for generating Promise<Suggestions>\r\n */\r\nclass SuggestionProvider {\r\n\t/**\r\n\t * \r\n\t * @param {String[]} suggestions\r\n\t * @param {SuggestionsBuilder} builder\r\n\t * @return {Promise<Suggestions>}\r\n\t */\r\n\tstatic suggest(suggestions, builder) {\r\n\t\tlet remainingLowercase = builder.getRemaining().toLowerCase();\r\n\t\tfor(let suggestion of suggestions) {\r\n\t\t\tif(SuggestionProvider.matchesSubStr(remainingLowercase, suggestion.toLowerCase())) {\r\n\t\t\t\tbuilder.suggest(suggestion);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn builder.buildPromise();\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {String} var0 \r\n\t * @param {String} var1 \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matchesSubStr(var0, var1) {\r\n\t\tlet var2 = 0;\r\n\t\twhile (!var1.startsWith(var0, var2)) {\r\n\t\t\tvar2 = var1.indexOf('_', var2);\r\n\t\t\tif (var2 < 0) {\r\n\t\t\t\treturn false; \r\n\t\t\t}\r\n\t\t\tvar2++;\r\n\t\t} \r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport class TimeArgument {\r\n\t\r\n\t/** @type {Map<String, Number} */\r\n\tstatic UNITS = new Map();\r\n\r\n\tstatic {\r\n\t\tTimeArgument.UNITS.set(\"d\", 24000);\r\n\t\tTimeArgument.UNITS.set(\"s\", 20);\r\n\t\tTimeArgument.UNITS.set(\"t\", 1);\r\n\t\tTimeArgument.UNITS.set(\"\", 1);\r\n\t}\r\n\r\n\tconstructor(ticks = 0) {\r\n\t\tthis.ticks = ticks;\r\n\t}\r\n\r\n\tparse(/** @type {StringReader} */ reader) {\r\n\t\tconst numericalValue = reader.readFloat();\r\n\t\tconst unit = reader.readUnquotedString();\r\n\t\tconst unitMultiplier = TimeArgument.UNITS.get(unit) ?? 0;\r\n\t\tif(unitMultiplier === 0) {\r\n\t\t\tthrow new SimpleCommandExceptionType(new LiteralMessage(`Invalid unit \"${unit}\"`)).createWithContext(reader);\r\n\t\t}\r\n\t\tconst ticks = Math.round(numericalValue * unitMultiplier);\r\n\t\tif(ticks < 0) {\r\n\t\t\tthrow new SimpleCommandExceptionType(new LiteralMessage(\"Tick count must be non-negative\")).createWithContext(reader);\r\n\t\t}\r\n\t\tthis.ticks = ticks;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {CommandContext} context \r\n\t * @param {SuggestionsBuilder} builder \r\n\t * @returns {Promise<Suggestions>}\r\n\t */\r\n\tlistSuggestions(context, builder) {\r\n\t\tlet reader = new StringReader(builder.getRemaining());\r\n\t\ttry {\r\n\t\t\treader.readFloat();\r\n\t\t} catch(ex) {\r\n\t\t\treturn reader.buildPromise();\r\n\t\t}\r\n\t\treturn SuggestionProvider.suggest([...TimeArgument.UNITS.keys()], builder.createOffset(builder.getStart() + reader.getCursor()));\r\n\t}\r\n\r\n\tgetExamples() {\r\n\t\treturn [\"0d\", \"0s\", \"0t\", \"0\"];\r\n\t}\r\n}\r\n\r\nexport class BlockPosArgument {\r\n\r\n\tconstructor(x = 0, y = 0, z = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t}\r\n\r\n\tparse(/** @type {StringReader} */ reader) {\r\n\t\tthis.x = reader.readLocationLiteral();\r\n\t\treader.skip();\r\n\t\tthis.y = reader.readLocationLiteral();\r\n\t\treader.skip();\r\n\t\tthis.z = reader.readLocationLiteral();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {CommandContext} context \r\n\t * @param {SuggestionsBuilder} builder \r\n\t * @returns {Promise<Suggestions>}\r\n\t */\r\n\tlistSuggestions(context, builder) {\r\n\t\tbuilder.suggest(\"~\");\r\n\t\tbuilder.suggest(\"~ ~\");\r\n\t\tbuilder.suggest(\"~ ~ ~\");\r\n\t\treturn builder.buildPromise();\r\n\t}\r\n\r\n\tgetExamples() {\r\n\t\treturn [\"1 2 3\"];\r\n\t}\r\n}\r\n\r\nexport class ColumnPosArgument {\r\n\r\n\tconstructor(x = 0, z = 0) {\r\n\t\tthis.x = x;\r\n\t\tthis.z = z;\r\n\t}\r\n\r\n\tparse(/** @type {StringReader} */ reader) {\r\n\t\tthis.x = reader.readLocationLiteral();\r\n\t\treader.skip();\r\n\t\tthis.z = reader.readLocationLiteral();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {CommandContext} context \r\n\t * @param {SuggestionsBuilder} builder \r\n\t * @returns {Promise<Suggestions>}\r\n\t */\r\n\tlistSuggestions(context, builder) {\r\n\t\tbuilder.suggest(\"~\");\r\n\t\tbuilder.suggest(\"~ ~\");\r\n\t\treturn builder.buildPromise();\r\n\t}\r\n\r\n\tgetExamples() {\r\n\t\treturn [\"1 2\"];\r\n\t}\r\n}\r\n\r\nexport class PlayerArgument {\r\n\t/**\r\n\t * \r\n\t * @param {string} username \r\n\t */\r\n\tconstructor(username = \"\") {\r\n\t\t/** @type string */\r\n\t\tthis.username = username;\r\n\t}\r\n\r\n\tparse(/** @type {StringReader} */ reader) {\r\n\t\tconst start = reader.getCursor();\r\n\t\twhile(reader.canRead() && reader.peek() !== \" \") {\r\n\t\t\treader.skip();\r\n\t\t}\r\n\r\n\t\tthis.username = reader.getString().slice(start, reader.getCursor());\r\n\r\n\t\tif(!this.username.match(/[A-Za-z_]+/)) {\r\n\t\t\tthrow new SimpleCommandExceptionType(new LiteralMessage(this.username + \" is not a valid username\")).createWithContext(reader);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {CommandContext} context \r\n\t * @param {SuggestionsBuilder} builder \r\n\t * @returns {Promise<Suggestions>}\r\n\t */\r\n\tlistSuggestions(context, builder) {\r\n\t\treturn Suggestions.empty();\r\n\t}\r\n\r\n\tgetExamples() {\r\n\t\treturn [\"Skepter\"];\r\n\t}\r\n}\r\n\r\nexport class MultiLiteralArgument {\r\n\t/**\r\n\t * @param {Array<String>} literals \r\n\t */\r\n\t constructor(literals) {\r\n\t\t/** @type {Array<String>} */\r\n\t\tthis.literals = literals;\r\n\t\t/** @type {string} */\r\n\t\tthis.selectedLiteral = \"\";\r\n\t}\r\n\r\n\tparse(/** @type {StringReader} */ reader) {\r\n\t\tconst start = reader.getCursor();\r\n\t\twhile(reader.canRead() && reader.peek() !== \" \") {\r\n\t\t\treader.skip();\r\n\t\t}\r\n\r\n\t\tthis.selectedLiteral = reader.getString().slice(start, reader.getCursor());\r\n\r\n\t\tif(this.selectedLiteral.endsWith(\" \")) {\r\n\t\t\tthis.selectedLiteral.trimEnd();\r\n\t\t\treader.setCursor(reader.getCursor() - 1);\r\n\t\t}\r\n\r\n\t\tif(!this.literals.includes(this.selectedLiteral)) {\r\n\t\t\tthrow new SimpleCommandExceptionType(new LiteralMessage(this.selectedLiteral + \" is not one of \" + this.literals)).createWithContext(reader);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {CommandContext} context \r\n\t * @param {SuggestionsBuilder} builder \r\n\t * @returns {Promise<Suggestions>}\r\n\t */\r\n\tlistSuggestions(context, builder) {\r\n\t\tfor(let literal of this.literals) {\r\n\t\t\tbuilder.suggest(literal);\r\n\t\t}\r\n\t\treturn builder.buildPromise();\r\n\t}\r\n\r\n\tgetExamples() {\r\n\t\treturn [\"blah\"];\r\n\t}\r\n}","import {\r\n\tCommandDispatcher,\r\n\tRootCommandNode,\r\n\tliteral as literalArgument,\r\n\targument,\r\n\tstring as stringArgument,\r\n\tinteger as integerArgument,\r\n\tfloat as floatArgument,\r\n\tbool as boolArgument\r\n} from \"./node_modules/node-brigadier/dist/index.js\"\r\n\r\nimport {\r\n\tBlockPosArgument,\r\n\tPlayerArgument,\r\n\tMultiLiteralArgument,\r\n\tColumnPosArgument,\r\n\tTimeArgument\r\n} from \"./arguments.js\"\r\n\r\n/******************************************************************************\r\n * Constants                                                                  *\r\n ******************************************************************************/\r\n\r\nconst commandInput = document.getElementById(\"cmd-input\");\r\nconst commandInputAutocomplete = document.getElementById(\"cmd-input-autocomplete\");\r\nconst errorMessageBox = document.getElementById(\"error-box\");\r\nconst suggestionsBox = document.getElementById(\"suggestions-box\");\r\n\r\nconst dispatcher = new CommandDispatcher();\r\n\r\n/******************************************************************************\r\n * Prototypes                                                                 *\r\n ******************************************************************************/\r\n\r\nCommandDispatcher.prototype.deleteAll = function deleteAll() {\r\n\tthis.root = new RootCommandNode();\r\n};\r\n\r\n/******************************************************************************\r\n * Enums                                                                      *\r\n ******************************************************************************/\r\n\r\nconst ChatColor = {\r\n\t// Uses the section symbol (§), just like Minecraft\r\n\tBLACK: \"\\u00A70\",\r\n\tDARK_BLUE: \"\\u00A71\",\r\n\tDARK_GREEN: \"\\u00A72\",\r\n\tDARK_AQUA: \"\\u00A73\",\r\n\tDARK_RED: \"\\u00A74\",\r\n\tDARK_PURPLE: \"\\u00A75\",\r\n\tGOLD: \"\\u00A76\",\r\n\tGRAY: \"\\u00A77\",\r\n\tDARK_GRAY: \"\\u00A78\",\r\n\tBLUE: \"\\u00A79\",\r\n\tGREEN: \"\\u00A7a\",\r\n\tAQUA: \"\\u00A7b\",\r\n\tRED: \"\\u00A7c\",\r\n\tLIGHT_PURPLE: \"\\u00A7d\",\r\n\tYELLOW: \"\\u00A7e\",\r\n\tWHITE: \"\\u00A7f\",\r\n};\r\n\r\nconst ChatColorCSS = {\r\n\t\"0\": \"black\",\r\n\t\"1\": \"dark_blue\",\r\n\t\"2\": \"dark_green\",\r\n\t\"3\": \"dark_aqua\",\r\n\t\"4\": \"dark_red\",\r\n\t\"5\": \"dark_purple\",\r\n\t\"6\": \"gold\",\r\n\t\"7\": \"gray\",\r\n\t\"8\": \"dark_gray\",\r\n\t\"9\": \"blue\",\r\n\t\"a\": \"green\",\r\n\t\"b\": \"aqua\",\r\n\t\"c\": \"red\",\r\n\t\"d\": \"light_purple\",\r\n\t\"e\": \"yellow\",\r\n\t\"f\": \"white\"\r\n};\r\n\r\nconst ChatColorCSSReversed = {};\r\nfor (let key in ChatColorCSS) {\r\n    ChatColorCSSReversed[ChatColorCSS[key]] = key;\r\n}\r\n\r\nconst ArgumentColors = {\r\n\t0: ChatColor.AQUA,\r\n\t1: ChatColor.YELLOW,\r\n\t2: ChatColor.GREEN,\r\n\t3: ChatColor.LIGHT_PURPLE,\r\n\t4: ChatColor.GOLD\r\n}\r\n\r\n// As implemented by https://commandapi.jorel.dev/8.5.1/internal.html\r\nconst ArgumentType = {\r\n\t\"brigadier:bool\": () => boolArgument(),\r\n\t\"brigadier:double\": () => floatArgument(),\r\n\t\"brigadier:float\": () => floatArgument(),\r\n\t\"brigadier:integer\": () => integerArgument(),\r\n\t\"brigadier:long\": () => integerArgument(),\r\n\t\"brigadier:string\": () => stringArgument(),\r\n\t\"minecraft:angle\": () => null,\r\n\t\"minecraft:block_pos\": () => new BlockPosArgument(),\r\n\t\"minecraft:block_predicate\": () => null,\r\n\t\"minecraft:block_state\": () => null,\r\n\t\"minecraft:color\": () => null,\r\n\t\"minecraft:column_pos\": () => new ColumnPosArgument(),\r\n\t\"minecraft:component\": () => null,\r\n\t\"minecraft:dimension\": () => null,\r\n\t\"minecraft:entity\": () => null,\r\n\t\"minecraft:entity_anchor\": () => null,\r\n\t\"minecraft:entity_summon\": () => null,\r\n\t\"minecraft:float_range\": () => null,\r\n\t\"minecraft:function\": () => null,\r\n\t\"minecraft:game_profile\": () => new PlayerArgument(),\r\n\t\"minecraft:int_range\": () => null,\r\n\t\"minecraft:item_enchantment\": () => null,\r\n\t\"minecraft:item_predicate\": () => null,\r\n\t\"minecraft:item_slot\": () => null,\r\n\t\"minecraft:item_stack\": () => null,\r\n\t\"minecraft:message\": () => null,\r\n\t\"minecraft:mob_effect\": () => null,\r\n\t\"minecraft:nbt\": () => null,\r\n\t\"minecraft:nbt_compound_tag\": () => null,\r\n\t\"minecraft:nbt_path\": () => null,\r\n\t\"minecraft:nbt_tag\": () => null,\r\n\t\"minecraft:objective\": () => null,\r\n\t\"minecraft:objective_criteria\": () => null,\r\n\t\"minecraft:operation\": () => null,\r\n\t\"minecraft:particle\": () => null,\r\n\t\"minecraft:resource_location\": () => null,\r\n\t\"minecraft:rotation\": () => null,\r\n\t\"minecraft:score_holder\": () => null,\r\n\t\"minecraft:scoreboard_slot\": () => null,\r\n\t\"minecraft:swizzle\": () => null,\r\n\t\"minecraft:team\": () => null,\r\n\t\"minecraft:time\": () => new TimeArgument(),\r\n\t\"minecraft:uuid\": () => null,\r\n\t\"minecraft:vec2\": () => null,\r\n\t\"minecraft:vec3\": () => null,\r\n};\r\n\r\n/******************************************************************************\r\n * Classes                                                                    *\r\n ******************************************************************************/\r\n\r\nclass Argument {\r\n\tconstructor(nodeName, type) {\r\n\t\tthis.nodeName = nodeName;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the range for this argument from a parsed command\r\n\t * @param {ParseResults<any>} parsedCommand a parsed command from dispatcher.parse\r\n\t */\r\n\tgetRange(parsedCommand) {\r\n\t\treturn parsedCommand.context.args.get(this.nodeName)?.range ?? {start:0, end: 0};\r\n\t}\r\n}\r\n\r\n/******************************************************************************\r\n * Helpers                                                                    *\r\n ******************************************************************************/\r\n\r\n/**\r\n * Registers a command into the global command dispatcher\r\n * @param {string} configCommand the command to register, as declared using the\r\n * CommandAPI config.yml's command declaration syntax (See\r\n * https://commandapi.jorel.dev/8.5.1/conversionforownerssingleargs.html)\r\n */\r\nfunction registerCommand(configCommand) {\r\n\r\n\t// No blank commands\r\n\tif(configCommand.trim().length === 0) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tfunction convertArgument(argumentType) {\r\n\t\tif(argumentType.includes(\"..\")) {\r\n\t\t\tlet lowerBound = argumentType.split(\"..\")[0];\r\n\t\t\tlet upperBound = argumentType.split(\"..\")[1];\r\n\r\n\t\t\tif(lowerBound.length === 0) {\r\n\t\t\t\tlowerBound = Number.MIN_SAFE_INTEGER;\r\n\t\t\t} else {\r\n\t\t\t\tlowerBound = Number.parseFloat(lowerBound);\r\n\t\t\t}\r\n\r\n\t\t\tif(upperBound.length === 0) {\r\n\t\t\t\tupperBound = Number.MAX_SAFE_INTEGER;\r\n\t\t\t} else {\r\n\t\t\t\tupperBound = Number.parseFloat(upperBound);\r\n\t\t\t}\r\n\r\n\t\t\t// We've got a decimal number, use a float argument\r\n\t\t\tif(lowerBound % 1 !== 0 || upperBound % 1 !== 0) {\r\n\t\t\t\treturn floatArgument(lowerBound, upperBound);\r\n\t\t\t} else {\r\n\t\t\t\t// Inclusive upper bound\r\n\t\t\t\tupperBound += 1;\r\n\t\t\t\treturn integerArgument(lowerBound, upperBound);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst argumentGeneratorFunction = ArgumentType[argumentType];\r\n\t\t\tif(argumentGeneratorFunction()) {\r\n\t\t\t\treturn argumentGeneratorFunction();\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error(\"Unimplemented argument: \" + argumentType);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst command = configCommand.split(\" \")[0];\r\n\tconst args = configCommand.split(\" \").slice(1);\r\n\r\n\tlet commandToRegister = literalArgument(command);\r\n\tlet argumentsToRegister = [];\r\n\r\n\t// From dev/jorel/commandapi/AdvancedConverter.java\r\n\tconst literalPattern = RegExp(/\\((\\w+(?:\\|\\w+)*)\\)/);\r\n\tconst argumentPattern = RegExp(/<(\\w+)>\\[([a-z:_]+|(?:[0-9\\.]+)?\\.\\.(?:[0-9\\.]+)?)\\]/);\r\n\r\n\tfor(let arg of args) {\r\n\t\tconst matchedLiteral = arg.match(literalPattern);\r\n\t\tconst matchedArgument = arg.match(argumentPattern);\r\n\t\tif(matchedLiteral) {\r\n\t\t\t// It's a literal argument\r\n\t\t\tconst literals = matchedLiteral[1].split(\"|\");\r\n\t\t\tif(literals.length === 1) {\r\n\t\t\t\targumentsToRegister.unshift(literalArgument(literals[0]));\r\n\t\t\t} else if(literals.length > 1) {\r\n\t\t\t\targumentsToRegister.unshift(argument(matchedLiteral[1], new MultiLiteralArgument(literals)));\r\n\t\t\t}\r\n\t\t} else if(matchedArgument) {\r\n\t\t\t// It's a regular argument\r\n\t\t\tconst nodeName = matchedArgument[1];\r\n\t\t\tconst argumentType = matchedArgument[2];\r\n\t\t\t\r\n\t\t\tlet convertedArgumentType = convertArgument(argumentType);\r\n\r\n\t\t\t// We're adding arguments in reverse order (last arguments appear\r\n\t\t\t// at the beginning of the array) because it's much much easier to process\r\n\t\t\targumentsToRegister.unshift(argument(nodeName, convertedArgumentType));\r\n\t\t}\r\n\t}\r\n\r\n\tif(argumentsToRegister.length > 0) {\r\n\t\tconst lastArgument = argumentsToRegister[0].executes(context => {\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\t// Flame on. Reduce.\r\n\t\targumentsToRegister.shift();\r\n\t\tconst reducedArguments = argumentsToRegister.reduce((prev, current) => current.then(prev), lastArgument);\r\n\t\tcommandToRegister = commandToRegister.then(reducedArguments);\r\n\t}\r\n\r\n\tdispatcher.register(commandToRegister);\r\n\t// plugins-to-convert:\r\n\t//   - Essentials:\r\n\t//     - speed <speed>[0..10]\r\n\t//     - speed <target>[minecraft:game_profile]\r\n\t//     - speed (walk|fly) <speed>[0..10]\r\n\t//     - speed (walk|fly) <speed>[0..10] <target>[minecraft:game_profile]\r\n}\r\n\r\n/**\r\n * Gets the current cursor position.\r\n *\r\n * From https://thewebdev.info/2022/04/24/how-to-get-contenteditable-caret-position-with-javascript/\r\n * @returns The current cursor position for the current element\r\n */\r\nfunction getCursorPosition() {\r\n\tconst sel = document.getSelection();\r\n\tsel.modify(\"extend\", \"backward\", \"paragraphboundary\");\r\n\tconst pos = sel.toString().length;\r\n\tif (sel.anchorNode !== undefined && sel.anchorNode !== null) {\r\n\t\tsel.collapseToEnd();\r\n\t}\r\n\treturn pos;\r\n};\r\n\r\n/**\r\n * Sets the current cursor position. This has to take into account the fact\r\n * that the current element is made up of many HTML elements instead of\r\n * plaintext, so selection ranges have to span across those elements to find\r\n * the exact location you're looking for.\r\n *\r\n * From https://stackoverflow.com/a/41034697/4779071\r\n * @param {number} index the number of characters into the current element\r\n *                       to place the cursor at\r\n * @param {Node} element the element to set the cursor for\r\n */\r\nfunction setCursorPosition(index, element) {\r\n\tif (index >= 0) {\r\n\t\tconst createRange = (/** @type Node */ node, /** @type {{count: number}} */ chars, /** @type Range */ range) => {\r\n\t\t\tif (!range) {\r\n\t\t\t\trange = document.createRange();\r\n\t\t\t\trange.selectNode(node);\r\n\t\t\t\trange.setStart(node, 0);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (chars.count === 0) {\r\n\t\t\t\trange.setEnd(node, chars.count);\r\n\t\t\t} else if (node && chars.count > 0) {\r\n\t\t\t\tif (node.nodeType === Node.TEXT_NODE) {\r\n\t\t\t\t\tif (node.textContent.length < chars.count) {\r\n\t\t\t\t\t\tchars.count -= node.textContent.length;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trange.setEnd(node, chars.count);\r\n\t\t\t\t\t\tchars.count = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let lp = 0; lp < node.childNodes.length; lp++) {\r\n\t\t\t\t\t\trange = createRange(node.childNodes[lp], chars, range);\r\n\t\t\r\n\t\t\t\t\t\tif (chars.count === 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\r\n\t\t\treturn range;\r\n\t\t};\r\n\r\n\t\t// We wrap index in an object so that recursive calls can use the\r\n\t\t// \"new\" value which is updated inside the object itself\r\n\t\tlet range = createRange(element, { count: index });\r\n\r\n\t\tif (range) {\r\n\t\t\trange.collapse(false);\r\n\t\t\tlet selection = window.getSelection();\r\n\t\t\tselection.removeAllRanges();\r\n\t\t\tselection.addRange(range);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nfunction getSelectedSuggestion() {\r\n\treturn document.querySelector(\".yellow\");\r\n}\r\n\r\n\r\n/**\r\n  * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\r\n  * \r\n  * @param {String} text The text to be rendered.\r\n  * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\r\n  * \r\n  * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\r\n  */\r\nfunction getTextWidth(text, element) {\r\n\r\n\tfunction getCssStyle(element, prop) {\r\n\t\treturn window.getComputedStyle(element, null).getPropertyValue(prop);\r\n\t}\r\n\r\n\tfunction getCanvasFont(el = document.body) {\r\n\t\tconst fontWeight = getCssStyle(el, 'font-weight') || 'normal';\r\n\t\tconst fontSize = getCssStyle(el, 'font-size') || '16px';\r\n\t\tconst fontFamily = getCssStyle(el, 'font-family') || 'Times New Roman';\r\n\t\t\r\n\t\treturn `${fontWeight} ${fontSize} ${fontFamily}`;\r\n\t}\r\n\r\n\t// re-use canvas object for better performance\r\n\tconst canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\r\n\tconst context = canvas.getContext(\"2d\");\r\n\tcontext.font = element.currentFont || (element.currentFont = getCanvasFont(element));\r\n\tconst metrics = context.measureText(text);\r\n\treturn metrics.width;\r\n}\r\n\r\n/**\r\n * Takes Minecraft text and renders it in the chat box. This will automatically\r\n * add the leading / character, so you don't have to do that yourself!\r\n * @param {string} minecraftCodedText\r\n * @param {Node | null} target\r\n */\r\nfunction setText(minecraftCodedText, target = null) {\r\n\tif(!target) {\r\n\t\ttarget = commandInput;\r\n\t}\r\n\t// Reset the text\r\n\ttarget.innerHTML = \"\";\r\n\r\n\tif(target === commandInput) {\r\n\t\t// Command forward slash. Always present, we don't want to remove this!\r\n\t\tlet element = document.createElement(\"span\");\r\n\t\telement.innerText = \"/\";\r\n\t\ttarget.appendChild(element);\r\n\t}\r\n\r\n\tlet buffer = \"\";\r\n\tlet currentColor = \"\";\r\n\r\n\tfunction writeBuffer() {\r\n\t\tif(buffer.length > 0) {\r\n\t\t\tlet elem = document.createElement(\"span\");\r\n\t\t\telem.className = currentColor;\r\n\t\t\telem.innerText = buffer;\r\n\t\t\ttarget.appendChild(elem);\r\n\t\t\tbuffer = \"\";\r\n\t\t}\r\n\t};\r\n\r\n\tfor(let i = 0; i < minecraftCodedText.length; i++) {\r\n\t\tif(minecraftCodedText[i] === \"\\u00A7\") {\r\n\t\t\twriteBuffer();\r\n\t\t\tcurrentColor = ChatColorCSS[minecraftCodedText[i + 1]];\r\n\t\t\ti++;\r\n\t\t\tcontinue;\r\n\t\t} else {\r\n\t\t\tbuffer += minecraftCodedText[i];\r\n\t\t}\r\n\t}\r\n\r\n\twriteBuffer();\r\n}\r\n\r\nfunction getText(withStyling = true) {\r\n\tlet buffer = \"\";\r\n\tfor(let child of commandInput.children) {\r\n\t\tif(child.className && withStyling) {\r\n\t\t\tbuffer += \"\\u00A7\" + ChatColorCSSReversed[child.className];\r\n\t\t}\r\n\t\tbuffer += child.innerText;\r\n\t}\r\n\treturn buffer;\r\n}\r\n\r\n/******************************************************************************\r\n * Events                                                                     *\r\n ******************************************************************************/\r\n\r\ncommandInput.oninput = async function() {\r\n\tlet cursorPos = getCursorPosition();\r\n\tlet commands = [\"say\", \"tp\", \"w\", \"weather\", \"whitelist\", \"worldborder\"];\r\n\r\n\t/** @type string */\r\n\tlet rawText = commandInput.innerText.replace(\"\\n\", \"\");\r\n\r\n\tlet showUsageText = false;\r\n\tlet errorText = \"\";\r\n\tlet suggestions = [];\r\n\r\n\t// Render colors\r\n\tif(rawText.startsWith(\"/\")) {\r\n\t\t// Parse the raw text\r\n\t\tconst rawTextNoSlash = rawText.slice(1);\r\n\t\tconst command = rawTextNoSlash.split(\" \")[0];\r\n\t\tconst rawArgs = rawText.split(\" \").slice(1);\r\n\r\n\t\t// Brigadier\r\n\t\tconst parsedCommand = dispatcher.parse(rawTextNoSlash, {});\r\n\t\tconst parsedCommandNoTrailing = dispatcher.parse(rawTextNoSlash.trimEnd(), {});\r\n\t\tconsole.log(parsedCommand);\r\n\r\n\t\tlet lastNode = parsedCommandNoTrailing.context.rootNode;\r\n\t\tif(parsedCommandNoTrailing.context.nodes.length > 0) {\r\n\t\t\tlastNode = parsedCommandNoTrailing.context.nodes[parsedCommandNoTrailing.context.nodes.length - 1].node;\r\n\t\t}\r\n\t\tconst usage = dispatcher.getAllUsage(lastNode, {}, false).join(\" \");\r\n\r\n\t\t// Reset text\r\n\t\tsetText(rawTextNoSlash);\r\n\t\tlet commandValid = false;\r\n\r\n\t\tif(parsedCommand.exceptions.size > 0) {\r\n\t\t\t// The command is invalid (the command doesn't exist). Make the whole text red.\r\n\t\t\tsetText(ChatColor.RED + rawTextNoSlash);\r\n\t\t\t\r\n\t\t\t/** @type {Map<any, String>} */\r\n\t\t\tconst exceptions = parsedCommand.exceptions;\r\n\t\t\terrorText = exceptions.entries().next().value[1].message;\r\n\t\t} else {\r\n\t\t\t// Brigadier is \"happy\" with the input. Let's run it and see!\r\n\t\t\ttry {\r\n\t\t\t\tdispatcher.execute(parsedCommand);\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tsetText(ChatColor.RED + rawTextNoSlash);\r\n\t\t\t\terrorText = ex.message;\r\n\r\n\t\t\t\t// TODO: We actually need to take into account the case when the\r\n\t\t\t\t// command IS ACTUALLY unknown!\r\n\t\t\t\tif(errorText.startsWith(\"Unknown command at position\")) {\r\n\t\t\t\t\terrorText = usage;\r\n\t\t\t\t\tshowUsageText = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(errorText === \"\") {\r\n\t\t\t\terrorText = ChatColor.GREEN + \"This command is valid ✅\";\r\n\t\t\t\tcommandValid = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Colorize existing arguments\r\n\t\tif (showUsageText || commandValid) {\r\n\t\t\tlet newText = command;\r\n\t\t\tlet parsedArgumentIndex = 0;\r\n\t\t\tfor(const [key, value] of parsedCommand.context.args) {\r\n\t\t\t\tif(parsedArgumentIndex > Object.keys(ArgumentColors).length) {\r\n\t\t\t\t\tparsedArgumentIndex = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnewText += \" \";\r\n\t\t\t\tnewText += ArgumentColors[parsedArgumentIndex];\r\n\t\t\t\tnewText += rawTextNoSlash.slice(value.range.start, value.range.end);\r\n\r\n\t\t\t\tparsedArgumentIndex++;\r\n\t\t\t}\r\n\t\t\tnewText += \"\".padEnd(rawTextNoSlash.length - rawTextNoSlash.trimEnd().length);\r\n\t\t\tsetText(newText);\r\n\t\t}\r\n\r\n\t\tconst suggestionsResult = await dispatcher.getCompletionSuggestions(parsedCommand);\r\n\t\tsuggestions = suggestionsResult.suggestions.map((x) => x.text);\r\n\t}\r\n\r\n\t// Set the cursor back to where it was. Since commands always start with a\r\n\t// forward slash, the only possible \"starting caret position\" is position 1\r\n\t// (in front of the slash)\r\n\tif(cursorPos === 0 && rawText.length > 0) {\r\n\t\tcursorPos = 1;\r\n\t}\r\n\tsetCursorPosition(cursorPos, commandInput);\r\n\tcommandInput.focus();\r\n\r\n\t// If any errors appear, display them\r\n\tif(errorText.length !== 0) {\r\n\t\tsetText(errorText, errorMessageBox);\r\n\t\terrorMessageBox.hidden = false;\r\n\t} else {\r\n\t\terrorMessageBox.hidden = true;\r\n\t}\r\n\r\n\tif(showUsageText) {\r\n\t\terrorMessageBox.style.left = getTextWidth(rawText, commandInput) + \"px\";\r\n\t\t// 8px padding, 10px margin left, 10px margin right = -28px\r\n\t\t// Plus an extra 10px for good luck, why not\r\n\t\terrorMessageBox.style.width = `calc(100% - ${errorMessageBox.style.left} - 28px + 10px)`;\r\n\t} else {\r\n\t\terrorMessageBox.style.left = 0;\r\n\t\terrorMessageBox.style.width = \"unset\";\r\n\t}\r\n\r\n\tconst constructSuggestionsHTML = (suggestions) => {\r\n\t\tlet nodesToAdd = [];\r\n\t\tfor(let i = 0; i < suggestions.length; i++) {\r\n\t\t\tconst suggestionElement = document.createElement(\"span\");\r\n\t\t\tsuggestionElement.innerText = suggestions[i];\r\n\t\t\tif(i === 0) {\r\n\t\t\t\tsuggestionElement.className = \"yellow\";\r\n\t\t\t}\r\n\t\t\tif(i !== suggestions.length - 1) {\r\n\t\t\t\tsuggestionElement.innerText += \"\\n\";\r\n\t\t\t}\r\n\t\t\tnodesToAdd.push(suggestionElement);\r\n\t\t}\r\n\r\n\t\treturn nodesToAdd;\r\n\t};\r\n\r\n\t// If suggestions are present, display them\r\n\tsuggestionsBox.style.left = 0;\r\n\tif(suggestions.length !== 0) {\r\n\t\tsuggestionsBox.innerHTML = \"\";\r\n\t\tfor(let suggestionElement of constructSuggestionsHTML(suggestions)) {\r\n\t\t\tsuggestionsBox.appendChild(suggestionElement);\r\n\t\t}\r\n\t\tsuggestionsBox.style.left = getTextWidth(rawText, commandInput) + \"px\";\r\n\t\t// 8px padding, 10px margin left, 10px margin right = -28px\r\n\t\t// Plus an extra 10px for good luck, why not\r\n\t\tsuggestionsBox.hidden = false;\r\n\t\terrorMessageBox.hidden = true;\r\n\t} else {\r\n\t\tsuggestionsBox.hidden = true;\r\n\t}\r\n\twindow.dispatchEvent(new Event(\"suggestionsUpdated\"));\r\n}\r\n\r\n// We really really don't want new lines in our single-lined command!\r\ncommandInput.addEventListener('keydown', (evt) => {\r\n\tswitch(evt.key) {\r\n\t\tcase \"Enter\":\r\n\t\t\tevt.preventDefault();\r\n\t\t\tbreak;\r\n\t\tcase \"ArrowDown\":\r\n\t\tcase \"ArrowUp\": {\r\n\t\t\tif(!suggestionsBox.hidden) {\r\n\t\t\t\tfor(let i = 0; i < suggestionsBox.childNodes.length; i++) {\r\n\t\t\t\t\tif(suggestionsBox.childNodes[i].className === \"yellow\") {\r\n\t\t\t\t\t\tsuggestionsBox.childNodes[i].className = \"\";\r\n\r\n\t\t\t\t\t\tif(evt.key == \"ArrowDown\") {\r\n\t\t\t\t\t\t\tif(i === suggestionsBox.childNodes.length - 1) {\r\n\t\t\t\t\t\t\t\tsuggestionsBox.childNodes[0].className = \"yellow\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsuggestionsBox.childNodes[i + 1].className = \"yellow\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif(i === 0) {\r\n\t\t\t\t\t\t\t\tsuggestionsBox.childNodes[suggestionsBox.childNodes.length - 1].className = \"yellow\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsuggestionsBox.childNodes[i - 1].className = \"yellow\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\twindow.dispatchEvent(new Event(\"suggestionsUpdated\"));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase \"Backspace\":\r\n\t\t\tif(commandInput.innerText.replace(\"\\n\", \"\").length === 0) {\r\n\t\t\t\tevt.preventDefault();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"Tab\":\r\n\t\t\tevt.preventDefault();\r\n\t\t\tsetText(getText(false).slice(1) + commandInputAutocomplete.innerText);\r\n\t\t\tdocument.getElementById(\"cmd-input\").oninput();\r\n\t\t\tsetCursorPosition(commandInput.innerText.length, commandInput);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n});\r\n\r\nwindow.addEventListener(\"suggestionsUpdated\", (event) => {\r\n\t/** @type string */\r\n\tlet rawText = commandInput.innerText;\r\n\r\n\tlet errorText = \"\";\r\n\tlet suggestions = [];\r\n\r\n\tif(!suggestionsBox.hidden) {\r\n\t\t/** @type string */\r\n\t\tlet selectedSuggestionText = getSelectedSuggestion().innerText.trim();\r\n\t\t// TODO: This obviously needs to be specific to the current suggestions, not the whole input\r\n\t\tif(rawText !== selectedSuggestionText) {\r\n\t\t\tlet cursorPosition = getCursorPosition();\r\n\t\t\tsetText(ChatColor.DARK_GRAY + selectedSuggestionText.slice(rawText.length - 1), commandInputAutocomplete);\r\n\t\t\tsetCursorPosition(cursorPosition, commandInput);\r\n\t\t\tcommandInput.focus();\r\n\t\t} else {\r\n\t\t\tsetText(\"\", commandInputAutocomplete);\r\n\t\t}\r\n\t} else {\r\n\t\tsetText(\"\", commandInputAutocomplete);\r\n\t}\r\n});\r\n\r\n// If you click on the chat box, focus the current text input area \r\ndocument.getElementById(\"chatbox\").onclick = function() {\r\n\tdocument.getElementById(\"cmd-input\").focus();\r\n\tsetCursorPosition(commandInput.innerText.length, commandInput);\r\n};\r\n\r\ndocument.getElementById(\"register-commands-button\").onclick = function() {\r\n\tdispatcher.deleteAll();\r\n\tdocument.getElementById(\"commands\").value.split(\"\\n\").forEach(registerCommand);\r\n\tcommandInput.oninput(); // Run syntax highlighter\r\n}\r\n\r\n\r\n/******************************************************************************\r\n * Entrypoint                                                                 *\r\n ******************************************************************************/\r\n\r\n// Default commands\r\ndocument.getElementById(\"commands\").value = `fill <pos1>[minecraft:block_pos] <pos2>[minecraft:block_pos] <block>[brigadier:string]\r\nspeed (walk|fly) <speed>[0..10] <target>[minecraft:game_profile]\r\nhello <val>[1..20]`;\r\n\r\ndocument.getElementById(\"register-commands-button\").onclick();\r\nconsole.log(\"Dispatcher\", dispatcher.getRoot())\r\n\r\n"],"names":["__importDefault","this","mod","__esModule","__importStar","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","CommandDispatcher_1","LiteralMessage_1","ParseResults_1","StringReader_1","ArgumentType_1","LiteralArgumentBuilder_1","RequiredArgumentBuilder_1","CommandContext_1","CommandContextBuilder_1","ParsedArgument_1","ParsedCommandNode_1","StringRange_1","SuggestionContext_1","CommandSyntaxException_1","DynamicCommandExceptionType_1","SimpleCommandExceptionType_1","Suggestion_1","Suggestions_1","SuggestionsBuilder_1","ArgumentCommandNode_1","LiteralCommandNode_1","RootCommandNode_1","word","string","greedyString","bool","integer","float","DefaultType","module","dispatcher","default","literal","argument","CommandDispatcher","LiteralMessage","ParseResults","StringReader","LiteralArgumentBuilder","RequiredArgumentBuilder","CommandContext","CommandContextBuilder","ParsedArgument","ParsedCommandNode","StringRange","SuggestionsContext","CommandSyntaxException","SimpleCommandExceptionType","DynamicCommandExceptionType","Suggestion","Suggestions","SuggestionsBuilder","ArgumentCommandNode","LiteralCommandNode","RootCommandNode","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","then","apply","ARGUMENT_SEPARATOR","constructor","root","consumer","onCommandComplete","register","command","build","addChild","setConsumer","execute","input","source","parse","getReader","canRead","getExceptions","size","values","getContext","getRange","isEmpty","BUILT_IN_EXCEPTIONS","dispatcherUnknownCommand","createWithContext","dispatcherUnknownArgument","successfulForks","forked","foundCommand","getString","original","contexts","push","i","length","context","child","getChild","isForked","hasNodes","modifier","getRedirectModifier","copyFor","getSource","results","ex","getCommand","getCursor","parseNodes","node","originalReader","contextSoFar","errors","potentials","cursor","getRelevantNodes","canUse","copy","reader","peek","dispatcherExpectedArgumentSeparator","Map","set","setCursor","withCommand","getRedirect","skip","childContext","withChild","sort","a","b","getAllUsage","restricted","__getAllUsage","prefix","redirect","getUsageText","getChildrenCount","getChildren","getSmartUsage","optional","usage","__getSmartUsage","deep","self","childOptional","open","close","children","filter","c","childUsage","Set","add","builder","count","getCompletionSuggestions","getTotalLength","nodeBeforeCursor","findSuggestionContext","parent","start","Math","min","startPos","fullInput","truncatedInput","substring","futures","future","empty","listSuggestions","ignored","merge","getRoot","getPath","target","nodes","addPaths","list","getName","findNode","path","name","findAmbiguities","parents","current","str","toString","exceptions","SYNTAX_QUOTE","other","getRemainingLength","getRead","getRemaining","offset","charAt","read","static","skipWhitespace","test","readInt","isAllowedNumber","number","readerExpectedInt","parseInt","isNaN","parseFloat","readerInvalidInt","readFloat","readerExpectedFloat","strictParseFloatTest","readerInvalidFloat","readUnquotedString","isAllowedInUnquotedString","readQuotedString","readerExpectedStartOfQuote","escaped","readerInvalidEscape","readerExpectedEndOfQuote","readString","readBoolean","readerExpectedBool","readerInvalidBool","expect","readerExpectedSymbol","BoolArgumentType_1","IntegerArgumentType_1","FloatArgumentType_1","StringArgumentType_1","EXAMPLES","BoolArgumentType","getArgument","Boolean","startsWith","toLowerCase","suggest","buildPromise","getExamples","FloatArgumentType","minimum","maximum","max","Infinity","Number","getMinimum","getMaximum","integerTooLow","integerTooHigh","equals","o","IntegerArgumentType","StringType","StringArgumentType","type","SINGLE_WORD","QUOTABLE_PHRASE","GREEDY_PHRASE","String","getType","text","escape","CommandNode_1","args","arg","Error","getThis","getArguments","executes","requires","requirement","getRequirement","forward","fork","forks","isFork","ArgumentBuilder_1","super","getLiteral","suggests","provider","suggestionsProvider","getSuggestionsProvider","isEqual_1","rootNode","range","getLastChild","clazz","get","getResult","getInput","getRootNode","getNodes","at","withSource","withArgument","withNode","encompassing","getStart","getDispatcher","getEnd","last","getNode","prev","nodeRange","end","between","pos","getLength","BuiltInExceptions","floatTooLow","FLOAT_TOO_SMALL","floatTooHigh","FLOAT_TOO_BIG","INTEGER_TOO_SMALL","INTEGER_TOO_BIG","literalIncorrect","LITERAL_INCORRECT","READER_EXPECTED_START_OF_QUOTE","READER_EXPECTED_END_OF_QUOTE","READER_INVALID_ESCAPE","READER_INVALID_BOOL","READER_INVALID_INT","READER_EXPECTED_INT","READER_INVALID_FLOAT","READER_EXPECTED_FLOAT","READER_EXPECTED_BOOL","READER_EXPECTED_SYMBOL","DISPATCHER_UNKNOWN_COMMAND","DISPATCHER_UNKNOWN_ARGUMENT","DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR","dispatcherParseException","DISPATCHER_PARSE_EXCEPTION","found","expected","character","symbol","message","BuiltInExceptions_1","captureStackTrace","__message","getMessage","getRawMessage","CONTEXT_AMOUNT","fn","create","IntegerSuggestion","tooltip","getValue","getText","getTooltip","compareTo","compareToIgnoreCase","expand","suggestions","getList","EMPTY","texts","suggestion","sorted","IntegerSuggestion_1","remaining","createOffset","restart","customSuggestions","getNodeType","getCustomSuggestions","contextBuilder","parsed","getSuggestions","createBuilder","isValidInput","getSortedKey","CommandNode","literals","grandchild","entries","matches","sibling","ambiguous","__parse","s","isEqual","key","val","testVal","undefined","has","isMapEqual","isArrayEqual","Array","aKeys","keys","bKeys","every","isObjectEqual","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","slice","SuggestionProvider","remainingLowercase","matchesSubStr","var0","var1","var2","indexOf","TimeArgument","UNITS","ticks","numericalValue","unit","unitMultiplier","round","BlockPosArgument","x","y","z","readLocationLiteral","ColumnPosArgument","PlayerArgument","username","match","MultiLiteralArgument","selectedLiteral","endsWith","trimEnd","includes","commandInput","document","getElementById","commandInputAutocomplete","errorMessageBox","suggestionsBox","ChatColorCSS","ChatColorCSSReversed","ArgumentColors","ArgumentType","registerCommand","configCommand","trim","convertArgument","argumentType","lowerBound","split","upperBound","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","argumentGeneratorFunction","console","error","commandToRegister","argumentsToRegister","literalPattern","RegExp","argumentPattern","matchedLiteral","matchedArgument","unshift","nodeName","convertedArgumentType","lastArgument","shift","reducedArguments","reduce","getCursorPosition","sel","getSelection","modify","anchorNode","collapseToEnd","setCursorPosition","index","element","createRange","chars","selectNode","setStart","setEnd","nodeType","Node","TEXT_NODE","textContent","lp","childNodes","collapse","selection","window","removeAllRanges","addRange","getTextWidth","getCssStyle","prop","getComputedStyle","getPropertyValue","canvas","createElement","font","currentFont","el","body","getCanvasFont","measureText","width","setText","minecraftCodedText","innerHTML","innerText","appendChild","buffer","currentColor","writeBuffer","elem","className","oninput","async","cursorPos","rawText","replace","showUsageText","errorText","rawTextNoSlash","parsedCommand","parsedCommandNoTrailing","log","lastNode","join","commandValid","ChatColor","newText","parsedArgumentIndex","padEnd","map","focus","hidden","style","left","suggestionElement","nodesToAdd","constructSuggestionsHTML","dispatchEvent","Event","addEventListener","evt","preventDefault","withStyling","event","selectedSuggestionText","querySelector","cursorPosition","onclick","deleteAll","forEach"],"sourceRoot":""}